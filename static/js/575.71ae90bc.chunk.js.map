{"version":3,"file":"static/js/575.71ae90bc.chunk.js","mappings":"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","sources":["webpack://togetrun/./src/components/footer/footer.module.css?0056","components/footer/footer.jsx","webpack://togetrun/./src/pages/mainpage/weather/weather.module.css?2d8c","pages/mainpage/weather/weather.jsx","webpack://togetrun/./src/pages/mainpage/posts/post.module.css?0317","pages/mainpage/posts/post.jsx","webpack://togetrun/./src/pages/mainpage/serch/search.module.css?3002","pages/mainpage/serch/search.jsx","webpack://togetrun/./src/pages/mainpage/posts/posts.module.css?df65","pages/mainpage/posts/posts.jsx","webpack://togetrun/./src/pages/mainpage/mainPage.module.css?a194","pages/mainpage/mainPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"RtyBrown\":\"#B5876D\",\"RtyBlack\":\"black\",\"RtyIvory\":\"#FFF7F1\",\"RtyRed\":\"red\",\"dimBlack\":\"rgba(0, 0, 0, 0.4)\",\"RtyPurple\":\"#8B3A8C\",\"RtyOrange\":\"#ff914d\",\"dimWhite\":\"rgba(245, 245, 245, 0.3)\",\"RtyWhite\":\"white\",\"RtyGrey\":\"#DFE0DF\",\"fontLarge\":\"48px\",\"fontMedium\":\"36px\",\"fontSmall\":\"24px\",\"footer\":\"footer_footer__XXj-R\",\"title\":\"footer_title__NO+Fr\",\"gitLink\":\"footer_gitLink__lfqjf\",\"member\":\"footer_member__Xb1aU\"};","import React from 'react';\nimport styles from './footer.module.css';\n\nconst Footer = () => {\n  return (\n    <footer className={styles.footer}>\n      <h1 className={styles.title}>Saessac_Study_Team_2</h1>\n      <button\n        className={styles.gitLink}\n        onClick={() =>\n          window.open(\n            'https://github.com/Saessac-Study-Team2/RunToYou',\n            '_blank'\n          )\n        }\n      >\n        https://github.com/Saessac-Study-Team2/RunToYou\n      </button>\n      <p className={styles.member}>\n        Codestates SEB_FE_39 서은정,안태건,조수완,진현덕\n      </p>\n    </footer>\n  );\n};\n\nexport default Footer;\n","// extracted by mini-css-extract-plugin\nexport default {\"weather_container\":\"weather_weather_container__b8qil\",\"weather_now_wrapper\":\"weather_weather_now_wrapper__CLeO2\",\"weather_location\":\"weather_weather_location__0El6h\",\"location\":\"weather_location__Iah1l\",\"weather_now_graphic\":\"weather_weather_now_graphic__vvfiP\",\"weather_now_icon\":\"weather_weather_now_icon__ZJ7SS\",\"weather_now_temp\":\"weather_weather_now_temp__3qOnZ\",\"weather_desc\":\"weather_weather_desc__ECHLt\",\"weather_summary\":\"weather_weather_summary__j9n1q\",\"term\":\"weather_term__YKnSt\",\"desc\":\"weather_desc__3NF-o\",\"interval_weather_container\":\"weather_interval_weather_container__NIRPE\",\"interval_weather_wrapper\":\"weather_interval_weather_wrapper__4QDG1\",\"interval_weather_icons\":\"weather_interval_weather_icons__2soq4\",\"interval_temp\":\"weather_interval_temp__PMqjD\",\"interval_time\":\"weather_interval_time__xw3Cg\"};","import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport styles from \"./weather.module.css\";\nimport Loading from \"./loading\";\n\nfunction Weather() {\n  const apiKey = process.env.REACT_APP_WEATHER_API_KEY;\n  const [currentWeatherData, setCurrentWeatherData] = useState(null);\n  const [intervalWeatherData, setIntervalWeatherData] = useState(null);\n  const [latitude, setLatitude] = useState(null);\n  const [longitude, setLongitude] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // 위치 추적하기\n  const getLocation = () => {\n    navigator.geolocation.getCurrentPosition(\n      (data) => {\n        // 위치 추적 활성화 시, 사용자 위도/경도 받아오기\n        setLatitude(data.coords.latitude);\n        setLongitude(data.coords.longitude);\n      },\n      () => {\n        // 위치 추적 비활성화 or 실패 시, 디폴트 위도/경도 받아오기 (여의도 한강공원)\n        setLatitude(37.526359155559);\n        setLongitude(126.93352258617);\n        console.log(\"err occurred OR location tracking blocked\");\n      }\n    );\n  };\n\n  // 현재 날씨 데이터 가져오기\n  const getCurrentWeatherData = () => {\n    setIsLoading(true);\n    axios\n      .get(\n        `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${apiKey}&units=metric&lang=kr`\n      )\n      .then((res) => {\n        const { data } = res;\n        const currentWeatherData = {\n          icon: `http://openweathermap.org/img/wn/${data.weather[0].icon}@2x.png`,\n          location: data.name,\n          weather: data.weather[0].description,\n          temp: data.main.temp,\n          hum: data.main.humidity,\n          wind: data.wind.speed,\n        };\n\n        setCurrentWeatherData(currentWeatherData);\n      })\n      .then(() => setIsLoading(false))\n      .catch(() => {\n        window.location.reload();\n      });\n  };\n\n  // 3시간 단위 날씨 데이터 가져오기\n  const getIntervalWeatherData = () => {\n    setIsLoading(true);\n    axios\n      .get(\n        `https://api.openweathermap.org/data/2.5/forecast?lat=${latitude}&lon=${longitude}&appid=${apiKey}&lang=kr&units=metric`\n      )\n      .then((res) => {\n        const { data } = res;\n        const idxLimitedData = data.list.filter(\n          (el, idx) => idx > 2 && idx < 9\n        );\n\n        const intervalWeatherData = idxLimitedData.map((el) => ({\n          icon: `http://openweathermap.org/img/wn/${el.weather[0].icon}@2x.png`,\n          temp: el.main.temp,\n          time: el.dt_txt,\n        }));\n\n        setIntervalWeatherData(intervalWeatherData);\n      })\n      .then(() => setIsLoading(false))\n      .catch(() => {\n        console.log(\"err\");\n      });\n  };\n\n  useEffect(() => {\n    getLocation();\n    if (latitude !== null) {\n      getCurrentWeatherData();\n      getIntervalWeatherData();\n    }\n  }, [latitude]);\n\n  return (\n    <div className={styles.weather_container}>\n      {isLoading ? (\n        <Loading />\n      ) : (\n        <div>\n          <div className={styles.weather_now_wrapper}>\n            <div className={styles.weather_location}>\n              {latitude === 37.526359155559 && longitude === 126.93352258617 ? (\n                <div className={styles.location}>\n                  <span>{currentWeatherData.location}</span>\n                  <span> (위치 추적 비허용)</span>\n                </div>\n              ) : (\n                <div className={styles.location}>\n                  {currentWeatherData.location}\n                </div>\n              )}\n            </div>\n            <div className={styles.weather_now_graphic}>\n              <img\n                className={styles.weather_now_icon}\n                src={currentWeatherData.icon}\n                alt=\"weather_icon\"\n              />\n              <div className={styles.weather_now_temp}>\n                <span>{currentWeatherData.temp + \"°\"}</span>\n              </div>\n            </div>\n            <div className={styles.weather_desc}>\n              {currentWeatherData.weather}\n            </div>\n            <dl className={styles.weather_summary}>\n              <dt className={styles.term}>습도</dt>\n              <dd className={styles.desc}>{currentWeatherData.hum + \"%\"}</dd>\n              <dt className={styles.term}>풍속</dt>\n              <dd className={styles.desc}>{currentWeatherData.wind + \"m/s\"}</dd>\n            </dl>\n          </div>\n          <ul className={styles.interval_weather_container}>\n            {intervalWeatherData &&\n              intervalWeatherData.map((el, idx) => (\n                <li className={styles.interval_weather_wrapper} key={idx}>\n                  <dl>\n                    <dt className={styles.interval_time}>\n                      {el.time.slice(11, 13) === \"00\"\n                        ? \"내일\"\n                        : el.time.slice(11, 13) + \"시\"}\n                    </dt>\n                    <img\n                      className={styles.interval_weather_icons}\n                      src={el.icon}\n                      alt=\"weather_icons\"\n                    ></img>\n                    <dd className={styles.interval_temp}>{`${el.temp}°`}</dd>\n                  </dl>\n                </li>\n              ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Weather;\n","// extracted by mini-css-extract-plugin\nexport default {\"post__container\":\"post_post__container__LgTou\",\"post__info__col1\":\"post_post__info__col1__OXfFy\",\"postPageBtn\":\"post_postPageBtn__gC2o2\",\"post__title\":\"post_post__title__ouBJk\",\"post__userImage\":\"post_post__userImage__wpIhy\",\"post__info__col2\":\"post_post__info__col2__jdaDL\",\"post__info__col3\":\"post_post__info__col3__23pnO\",\"post__content\":\"post_post__content__wpihj\",\"post__place\":\"post_post__place__QfAjA\",\"post__info__col4\":\"post_post__info__col4__iek0o\",\"post__recruiting\":\"post_post__recruiting__Fe3hx\",\"post__recruited\":\"post_post__recruited__qh2Tv\",\"post__createAt\":\"post_post__createAt__4XezL\",\"post__userName\":\"post_post__userName__WKVjy\"};","import React, { useEffect, useState } from \"react\";\nimport WriteModal from \"../../../components/Modals/writeModal\";\nimport PostPage from \"../postPage\";\nimport styles from \"./post.module.css\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { getLoginCookie } from \"../../../library/cookie\";\nimport { getPosts, getProfile, getUsers } from \"../../../library/axios\";\nconst axios = require(\"axios\");\n\n// MainPage에 posts state에서 데이터를 받아서 게시글 하나를 만드는 컴포넌트\nconst Post = ({ post, setPosts, locationList, userId, users }) => {\n  const createdAt = post.created_at.slice(0, 10);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [writer2, setWriter] = useState({});\n  const [modal, setModal] = useState(false);\n  const openModal = () => {\n    setModalOpen(true);\n  };\n  const closeModal = () => {\n    setModalOpen(false);\n  };\n\n  // 글 삭제 요청\n  const handlePostDelete = () => {\n    axios\n      .delete(`https://saessac.kro.kr:80/topic/${post.tid}`, {\n        headers: { Authorization: getLoginCookie() },\n      })\n      .then(function (response) {\n        getPosts()\n          .then((data) => {\n            setPosts(data);\n          })\n          .catch((error) => console.log(\"error\", error));\n        console.log(\"well done!\");\n      });\n  };\n  const getWritersInfo = () => {\n    // console.log(post.userID);\n    // console.log(users);\n    const writer = users.filter((el) => {\n      return el.userID === post.userID;\n    });\n    console.log(writer[0]);\n    setWriter(writer[0]);\n    console.log(writer2);\n    setModal(!modal);\n  };\n\n  return (\n    <>\n      <li className={styles.post__container} id={post.tid}>\n        <div className={styles.post__info__col1}>\n          <h2 className={styles.post__title}>{post.topicTitle}</h2>\n          <p className={styles.post__content}>{post.topicContents}</p>\n        </div>\n        <div className={styles.post__info__col2}>\n          <div\n            className={\n              post.recruit === \"recruiting\"\n                ? styles.post__recruiting\n                : styles.post__recruited\n            }\n          >\n            {post.recruit === \"recruiting\" ? \"모집중\" : \"모집완료\"}\n          </div>\n          <span className={styles.post__place}>{post.locationName}</span>\n        </div>\n        <div className={styles.post__info__col3}>\n          <img\n            onClick={getWritersInfo}\n            className={styles.post__userImage}\n            width={100}\n            src={`https://saessac.kro.kr:80/${post.userPicture}`}\n          ></img>\n          <span className={styles.post__userName}>{post.nickName}</span>\n          <div className={styles.post__createAt}>{createdAt}</div>\n          {modal && (\n            <>\n              <p>{writer2.info}</p>\n            </>\n          )}\n        </div>\n        <div className={styles.post__info__col4}>\n          <Link\n            to={{\n              pathname: `/post/${post.tid}`,\n              state: {\n                id: post.tid,\n              },\n            }}\n          >\n            <button className={styles.postPageBtn}>더보기</button>\n          </Link>\n        </div>\n      </li>\n    </>\n  );\n};\n\nexport default Post;\n","// extracted by mini-css-extract-plugin\nexport default {\"writeBtn\":\"search_writeBtn__CcDLc\",\"myPosts\":\"search_myPosts__DYOQ7\",\"search__container\":\"search_search__container__hSi-w\",\"container__col1\":\"search_container__col1__5xH2C\",\"container__col2\":\"search_container__col2__d-q4t\",\"selectBox\":\"search_selectBox__P260c\",\"select\":\"search_select__OBwH-\",\"icoArrow\":\"search_icoArrow__ZtR3k\",\"writer\":\"search_writer__PayAd\",\"select1\":\"search_select1__9wPGc\",\"select2\":\"search_select2__ueBYx\"};","import { useRecoilState } from 'recoil';\nimport { postsState, isUserState } from '../../../library/atom';\nimport WriteModal from '../../../components/Modals/writeModal';\nimport { useState } from 'react';\nimport styles from './search.module.css';\n\nconst Search = ({\n  posts,\n  selected,\n  setSelected,\n  recruit,\n  setRecruit,\n  writer,\n  setWriter,\n  myPosts,\n  setMyPosts,\n  setPosts,\n  locationList,\n}) => {\n  const [isLogin, setIsLogin] = useRecoilState(isUserState);\n  const locationNameList = ['강동구', '관악구', '마포구'];\n  const recruitList = ['모집중', '모집완료'];\n  const [modalOpen, setModalOpen] = useState(false);\n\n  //모달\n  const openModal = () => {\n    setModalOpen(true);\n  };\n  const closeModal = () => {\n    setModalOpen(false);\n  };\n\n  const handleSelect = e => {\n    setSelected(e.target.value);\n  };\n  const handleRecruit = e => {\n    setRecruit(e.target.value);\n  };\n  const handleWriter = e => {\n    setWriter(e.target.value);\n  };\n  const handleMyPosts = e => {\n    setMyPosts(!myPosts);\n  };\n  for (let i = 0; i < posts.length; i++) {\n    for (let key in posts[i]) {\n      if (key === 'locationName') {\n        if (locationNameList.indexOf(posts[i][key]) === -1)\n          locationNameList.push(posts[i][key]);\n      }\n    }\n  }\n  return (\n    <>\n      <section className={styles.search__container}>\n        <div className={styles.container__col2}>\n          <div className={styles.selectBox}>\n            <select\n              onChange={handleSelect}\n              value={selected}\n              className={styles.select1}\n            >\n              <option value={'지역검색'}>--지역--</option>\n              {locationNameList.map((el, idx) => {\n                return (\n                  <option key={idx} value={el}>\n                    {el}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n          <div className={styles.selectBox}>\n            <select\n              onChange={handleRecruit}\n              value={recruit}\n              className={styles.select2}\n            >\n              <option value={'모집상태'}>--모집상태--</option>\n              {recruitList.map((el, idx) => {\n                return (\n                  <option\n                    key={idx}\n                    value={el === '모집중' ? 'recruiting' : 'recruited'}\n                  >\n                    {el}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n          <input\n            value={writer}\n            onChange={handleWriter}\n            placeholder='작성자'\n            className={styles.writer}\n          ></input>\n        </div>\n        {isLogin && (\n          <div className={styles.container__col1}>\n            <button\n              className={styles.myPosts}\n              onClick={handleMyPosts}\n              type='button'\n            >\n              {myPosts === true ? '전체보기' : '내글보기'}\n            </button>\n            <button className={styles.writeBtn} onClick={openModal}>\n              글쓰기\n            </button>\n\n            <WriteModal\n              locationList={locationList}\n              open={modalOpen}\n              close={closeModal}\n              header='글쓰기'\n              setPosts={setPosts}\n            ></WriteModal>\n          </div>\n        )}\n      </section>\n    </>\n  );\n};\n\nexport default Search;\n","// extracted by mini-css-extract-plugin\nexport default {\"posts_Main\":\"posts_posts_Main__djwkN\",\"posts__ul\":\"posts_posts__ul__oQJlw\"};","import { useRecoilState } from \"recoil\";\nimport Post from \"./post\";\nimport { userIDState, postsState } from \"../../../library/atom\";\nimport { useEffect, useState } from \"react\";\nimport Pagination from \"../../../components/Pagination/Pagination\";\nimport Search from \"../serch/search\";\nimport { render } from \"@testing-library/react\";\nimport styles from \"./posts.module.css\";\n\nconst Posts = ({ locationList, userId, users }) => {\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(1);\n  const offset = (page - 1) * limit;\n  const [selected, setSelected] = useState(\"지역검색\");\n  const [recruit, setRecruit] = useState(\"모집상태\");\n  const [writer, setWriter] = useState(\"\");\n  const [myPosts, setMyPosts] = useState(false);\n  const [posts, setPosts] = useRecoilState(postsState);\n  let filteredPosts = posts;\n\n  for (let i = 0; i < posts.length; i++) {\n    for (let key in posts[i]) {\n      if (key === \"recruit\" && recruit !== \"모집상태\") {\n        filteredPosts = filteredPosts.filter((x) => {\n          return x[key] === recruit;\n        });\n      }\n      if (key === \"locationName\" && selected !== \"지역검색\") {\n        filteredPosts = filteredPosts.filter((x) => {\n          return x[key] === selected;\n        });\n      }\n      if (key === \"userID\" && writer !== \"\") {\n        filteredPosts = filteredPosts.filter((x) => {\n          return x[key].indexOf(writer) !== -1;\n        });\n      }\n      if (key === \"userID\" && myPosts !== false) {\n        filteredPosts = filteredPosts.filter((x) => {\n          return x[key] === userId;\n        });\n      }\n    }\n  }\n\n  const renderList = filteredPosts.slice(offset, offset + limit);\n\n  return (\n    <>\n      <div className={styles.posts_Main}>\n        <Search\n          selected={selected}\n          setPosts={setPosts}\n          setSelected={setSelected}\n          posts={posts}\n          recruit={recruit}\n          setRecruit={setRecruit}\n          writer={writer}\n          setWriter={setWriter}\n          myPosts={myPosts}\n          setMyPosts={setMyPosts}\n          userId={userId}\n          locationList={locationList}\n        />\n        <ul className={styles.posts__ul}>\n          {renderList.map((post, idx) => (\n            <Post\n              users={users}\n              locationList={locationList}\n              setPosts={setPosts}\n              key={idx}\n              userId={userId}\n              post={post}\n            />\n          ))}\n        </ul>\n\n        <Pagination\n          total={filteredPosts.length}\n          limit={limit}\n          page={page}\n          setPage={setPage}\n        ></Pagination>\n      </div>\n    </>\n  );\n};\n\nexport default Posts;\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"mainPage_main__7-YJm\",\"mainPage\":\"mainPage_mainPage__HnZY2\",\"mainContents\":\"mainPage_mainContents__92IMr\",\"writeBtn\":\"mainPage_writeBtn__l11cU\"};","import React, { useEffect, useState } from \"react\";\nimport Weather from \"./weather/weather\";\nimport Posts from \"./posts/posts\";\nimport Header from \"../../components/header/header\";\nimport styles from \"./mainPage.module.css\";\nimport Footer from \"../../components/footer/footer\";\nimport { useRecoilState } from \"recoil\";\nimport {\n  postsState,\n  locationListState,\n  userIDState,\n  userState,\n} from \"../../library/atom\";\nimport { getPosts, getUsers } from \"../../library/axios\";\nconst axios = require(\"axios\");\nconst MainPage = () => {\n  const [posts, setPosts] = useRecoilState(postsState);\n  const [locationList, setLocationList] = useRecoilState(locationListState);\n  const [users, setUsers] = useState([]);\n  const [userId, setUserId] = useRecoilState(userIDState);\n\n  // 게시글 받아오기\n  useEffect(() => {\n    getPosts()\n      .then((data) => {\n        setPosts(data.reverse());\n      })\n      .catch((error) => console.log(\"error\", error));\n  }, []);\n\n  useEffect(() => {\n    getUsers() //\n      .then((res) => setUsers(res));\n  }, []);\n\n  return (\n    <>\n      <div className={styles.mainPage}>\n        <div className={styles.main}>\n          <div className={styles.mainContents}>\n            <Weather />\n            <Posts\n              userId={userId}\n              users={users}\n              posts={posts}\n              setPosts={setPosts}\n              locationList={locationList}\n            />\n          </div>\n        </div>\n        {/* <Footer /> */}\n        <Header />\n      </div>\n    </>\n  );\n};\n\nexport default MainPage;\n"],"names":["className","styles","onClick","window","open","apiKey","process","useState","currentWeatherData","setCurrentWeatherData","intervalWeatherData","setIntervalWeatherData","latitude","setLatitude","longitude","setLongitude","isLoading","setIsLoading","useEffect","navigator","geolocation","getCurrentPosition","data","coords","console","log","axios","then","res","icon","weather","location","name","description","temp","main","hum","humidity","wind","speed","catch","reload","list","filter","el","idx","map","time","dt_txt","src","alt","slice","require","post","users","setPosts","locationList","userId","createdAt","created_at","writer2","setWriter","modal","setModal","id","tid","topicTitle","topicContents","recruit","locationName","writer","userID","width","userPicture","nickName","info","to","pathname","state","posts","selected","setSelected","setRecruit","myPosts","setMyPosts","useRecoilState","isUserState","isLogin","locationNameList","modalOpen","setModalOpen","i","length","key","indexOf","push","onChange","e","target","value","placeholder","type","close","header","limit","page","setPage","offset","postsState","filteredPosts","x","renderList","Pagination","total","locationListState","setUsers","userIDState","getPosts","reverse","error","getUsers"],"sourceRoot":""}