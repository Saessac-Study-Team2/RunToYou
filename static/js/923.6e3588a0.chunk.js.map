{"version":3,"file":"static/js/923.6e3588a0.chunk.js","mappings":"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","sources":["components/Modals/confirmAlert.jsx","webpack://togetrun/./src/components/footer/footer.module.css?0056","components/footer/footer.jsx","webpack://togetrun/./src/components/header/navbar/navbar.module.css?de55","components/header/navbar/navbar.jsx","webpack://togetrun/./src/components/header/header.module.css?9833","components/header/header.jsx","../node_modules/react-kakao-maps-sdk/src/util/kakaoMapApiLoader.ts","static/resource/dummyData.js","../node_modules/react-kakao-maps-sdk/src/hooks/useIsomorphicLayoutEffect.tsx","../node_modules/react-kakao-maps-sdk/src/hooks/useKakaoEvent.tsx","../node_modules/react-kakao-maps-sdk/src/components/Map.tsx","../node_modules/react-kakao-maps-sdk/src/hooks/useMap.tsx","../node_modules/react-kakao-maps-sdk/src/components/InfoWindow.tsx","../node_modules/react-kakao-maps-sdk/src/components/MarkerClusterer.tsx","../node_modules/react-kakao-maps-sdk/src/components/Marker.tsx","../node_modules/react-kakao-maps-sdk/src/components/MapMarker.tsx","../node_modules/react-kakao-maps-sdk/src/components/Roadview.tsx","../node_modules/react-kakao-maps-sdk/src/components/MapInfoWindow.tsx","../node_modules/react-kakao-maps-sdk/src/components/CustomOverlayMap.tsx","../node_modules/react-kakao-maps-sdk/src/components/MapTypeControl.tsx","../node_modules/react-kakao-maps-sdk/src/components/ZoomControl.tsx","../node_modules/react-kakao-maps-sdk/src/components/Circle.tsx","../node_modules/react-kakao-maps-sdk/src/components/Polyline.tsx","../node_modules/react-kakao-maps-sdk/src/components/Polygon.tsx","../node_modules/react-kakao-maps-sdk/src/components/Rectangle.tsx","../node_modules/react-kakao-maps-sdk/src/components/Ellipse.tsx","../node_modules/react-kakao-maps-sdk/src/components/AbstractOverlay.tsx","../node_modules/react-kakao-maps-sdk/src/hooks/useRoadview.tsx","../node_modules/react-kakao-maps-sdk/src/components/DrawingManager.tsx","../node_modules/react-kakao-maps-sdk/src/components/CustomOverlayRoadview.tsx","../node_modules/react-kakao-maps-sdk/src/components/RoadviewMarker.tsx","../node_modules/react-kakao-maps-sdk/src/components/RoadviewInfoWindow.tsx","../node_modules/react-kakao-maps-sdk/src/components/Toolbox.tsx","../node_modules/react-kakao-maps-sdk/src/components/StaticMap.tsx","pages/recommended/mapContainer.jsx","pages/recommended/mapModal.jsx","webpack://togetrun/./src/pages/recommended/recommendedBox.module.css?816d","pages/recommended/recommendedBox.jsx","pages/recommended/eventModal.jsx","webpack://togetrun/./src/pages/recommended/recommended.module.css?ba77","pages/recommended/recommended.jsx"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  z-index: 1000;\n`;\n\nconst Wraper = styled.div`\n  box-shadow: rgba(0, 0, 0, 0.4) 0px 2px 2px,\n    rgba(0, 0, 0, 0.3) 0px 6px 8px -3px, rgba(0, 0, 0, 0.2) 0px -3px 0px inset;\n  z-index: 1000;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background: white;\n  padding: 20px;\n  border-radius: 10px;\n  width: 25rem;\n  height: 20rem;\n  img {\n    width: 4rem;\n    margin-bottom: 1rem;\n  }\n  .msg {\n    color: #111;\n    font-size: 16px;\n    margin-bottom: 1rem;\n  }\n  .target {\n    color: black;\n    font-size: 24px;\n    margin-bottom: 1rem;\n  }\n  button {\n    width: 3rem;\n\n    color: white;\n    padding: 10px;\n    margin-left: 4px;\n    border: none;\n    border-radius: 1rem;\n    cursor: pointer;\n    border-radius: 1rem;\n  }\n  .btns {\n    display: flex;\n    align-items: center;\n\n    .true {\n      background: red;\n    }\n    .false {\n      background: green;\n    }\n  }\n`;\nconst ConfirmAlert = ({ message, onComfirm, target }) => {\n  return (\n    <Container onClick={() => onComfirm(false)}>\n      <Wraper onClick={(e) => e.stopPropagation()}>\n        <h1 className=\"target\">{target}</h1>\n        <h3 className=\"msg\">{message}</h3>\n        <img src={process.env.PUBLIC_URL + \"/favicon.ico\"} alt=\"favicon\" />\n        <div className=\"btns\">\n          <button className=\"true\" onClick={() => onComfirm(true)}>\n            Yes\n          </button>\n          <button className=\"false\" onClick={() => onComfirm(false)}>\n            No\n          </button>\n        </div>\n      </Wraper>\n    </Container>\n  );\n};\n\nexport default ConfirmAlert;\n","// extracted by mini-css-extract-plugin\nexport default {\"RtyBrown\":\"#B5876D\",\"RtyBlack\":\"black\",\"RtyIvory\":\"#FFF7F1\",\"RtyRed\":\"red\",\"dimBlack\":\"rgba(0, 0, 0, 0.4)\",\"RtyPurple\":\"#8B3A8C\",\"RtyOrange\":\"#ff914d\",\"dimWhite\":\"rgba(245, 245, 245, 0.3)\",\"RtyWhite\":\"white\",\"RtyGrey\":\"#DFE0DF\",\"fontLarge\":\"48px\",\"fontMedium\":\"36px\",\"fontSmall\":\"24px\",\"footer\":\"footer_footer__XXj-R\",\"title\":\"footer_title__NO+Fr\",\"gitLink\":\"footer_gitLink__lfqjf\",\"member\":\"footer_member__Xb1aU\"};","import React from 'react';\nimport styles from './footer.module.css';\n\nconst Footer = () => {\n  return (\n    <footer className={styles.footer}>\n      <h1 className={styles.title}>Saessac_Study_Team_2</h1>\n      <button\n        className={styles.gitLink}\n        onClick={() =>\n          window.open(\n            'https://github.com/Saessac-Study-Team2/RunToYou',\n            '_blank'\n          )\n        }\n      >\n        https://github.com/Saessac-Study-Team2/RunToYou\n      </button>\n      <p className={styles.member}>\n        Codestates SEB_FE_39 서은정,안태건,조수완,진현덕\n      </p>\n    </footer>\n  );\n};\n\nexport default Footer;\n","// extracted by mini-css-extract-plugin\nexport default {\"RtyBrown\":\"#B5876D\",\"RtyBlack\":\"black\",\"RtyIvory\":\"#FFF7F1\",\"RtyRed\":\"red\",\"dimBlack\":\"rgba(0, 0, 0, 0.4)\",\"RtyPurple\":\"#8B3A8C\",\"RtyOrange\":\"#ff914d\",\"dimWhite\":\"rgba(245, 245, 245, 0.3)\",\"RtyWhite\":\"white\",\"RtyGrey\":\"#DFE0DF\",\"fontLarge\":\"48px\",\"fontMedium\":\"36px\",\"fontSmall\":\"24px\",\"navbar\":\"navbar_navbar__TdqIH\",\"navLink\":\"navbar_navLink__pmTlF\"};","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { isUserState } from '../../../library/atom';\nimport { useRecoilState } from 'recoil';\nimport styles from './navbar.module.css';\n\nconst Navbar = () => {\n  const [isLogin, setIsLogin] = useRecoilState(isUserState);\n  return (\n    <nav className={styles.navbar}>\n      {!isLogin && (\n        <Link className={styles.navLink} to='/'>\n          <span>Intro</span>\n        </Link>\n      )}\n      <Link className={styles.navLink} to='/mainpage'>\n        <span>Main Page</span>\n      </Link>\n\n      <Link className={styles.navLink} to='/recommended'>\n        <span>hotPlace</span>\n      </Link>\n      {isLogin && (\n        <Link className={styles.navLink} to='/mypage'>\n          <span>myPage</span>\n        </Link>\n      )}\n    </nav>\n  );\n};\n\nexport default Navbar;\n","// extracted by mini-css-extract-plugin\nexport default {\"Rtygrey\":\"undefined\",\"RtyBrown\":\"#B5876D\",\"RtyBlack\":\"black\",\"RtyIvory\":\"#FFF7F1\",\"RtyRed\":\"red\",\"dimBlack\":\"rgba(0, 0, 0, 0.4)\",\"RtyPurple\":\"#8B3A8C\",\"RtyOrange\":\"#ff914d\",\"dimWhite\":\"rgba(245, 245, 245, 0.3)\",\"RtyWhite\":\"white\",\"RtyGrey\":\"#DFE0DF\",\"fontLarge\":\"48px\",\"fontMedium\":\"36px\",\"fontSmall\":\"24px\",\"header\":\"header_header__z8ezc\",\"avata\":\"header_avata__spVXK\",\"logo\":\"header_logo__wLirW\",\"nickname\":\"header_nickname__5mxBh\",\"btnContainer\":\"header_btnContainer__3kiPK\",\"button\":\"header_button__J4OfG\"};","import React, { useState } from \"react\";\nimport Navbar from \"./navbar/navbar\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { deleteCookie } from \"../../library/cookie\";\nimport { isUserState, UserAvataState, nicknameState } from \"../../library/atom\";\nimport { useRecoilState } from \"recoil\";\nimport styles from \"./header.module.css\";\nimport ConfirmAlert from \"../Modals/confirmAlert\";\n\nconst Header = () => {\n  const navigate = useNavigate();\n  const [isLogin, setIsLogin] = useRecoilState(isUserState);\n  const [avata, setAvata] = useRecoilState(UserAvataState);\n  const [nickname, setNickname] = useRecoilState(nicknameState);\n  const [confirmModal, setConfirmModal] = useState(false);\n\n  const onLogout = () => {\n    setConfirmModal(!confirmModal);\n  };\n  const logOut = async () => {\n    deleteCookie();\n    setIsLogin(false);\n    navigate(\"/\");\n  };\n\n  const confirmLogout = (res) => {\n    if (res) {\n      onLogout();\n      logOut();\n    } else {\n      onLogout();\n    }\n  };\n  return (\n    <header className={styles.header}>\n      {confirmModal && (\n        <ConfirmAlert\n          message={\"로그아웃 하시겠습니까?\"}\n          onComfirm={confirmLogout}\n          target={nickname}\n        />\n      )}\n      <Link to=\"/mainpage\">\n        <img\n          src={process.env.PUBLIC_URL + \"/img/logo1.png\"}\n          alt=\"logo img\"\n          className={styles.logo}\n        />\n      </Link>\n      <Navbar />\n      {isLogin ? (\n        <div className={styles.btnContainer}>\n          <div className={styles.avataWrapper}>\n            <div className={styles.avataCentered}>\n              <img\n                src={`https://saessac.kro.kr:80/${avata}`}\n                alt=\"profile img\"\n                className={styles.avata}\n              />\n            </div>\n          </div>\n\n          <p className={styles.nickname}>{nickname}</p>\n          <button className={styles.button} onClick={onLogout}>\n            로그아웃\n          </button>\n        </div>\n      ) : (\n        <div className={styles.btnContainer}>\n          <Link to=\"/signup\">\n            <button className={styles.button}>가입하기</button>\n          </Link>\n          <Link to=\"/login\">\n            <button className={styles.button}>로그인</button>\n          </Link>\n        </div>\n      )}\n    </header>\n  );\n};\n\nexport default Header;\n","export type Libraries = (\"services\" | \"clusterer\" | \"drawing\")[]\n\nexport interface LoaderOptions {\n  /**\n   * script 객체 생성시 사용자 정의 id\n   */\n  id?: string\n  /**\n   * 발급 받은 Kakao 지도 Javscript API 키.\n   *\n   * @see [준비하기](https://apis.map.kakao.com/web/guide/#ready)\n   */\n  appkey: string\n  /**\n   * 사용하는 라이브러리 목록\n   *\n   * Kakao 지도 Javascript API 는 지도와 함께 사용할 수 있는 라이브러리 를 지원하고 있습니다.\n   * 라이브러리는 javascript API와 관련되어 있지만 조금 특화된 기능을 묶어둔 것을 말합니다. 이 기능은 추가로 불러와서 사용할 수 있도록 되어있습니다.\n   * 현재 사용할 수 있는 라이브러리는 다음과 같습니다.\n   *\n   * clusterer: 마커를 클러스터링 할 수 있는 클러스터러 라이브러리 입니다.\n   * services: 장소 검색 과 주소-좌표 변환 을 할 수 있는 services 라이브러리 입니다.\n   * drawing: 지도 위에 마커와 그래픽스 객체를 쉽게 그릴 수 있게 그리기 모드를 지원하는 drawing 라이브러리 입니다.\n   * 라이브러리는 계속해서 추가될 예정입니다.\n   */\n  libraries?: Libraries\n  /**\n   * 사용자 정의 Kakao 지도 javascript 경로 지정\n   *\n   * @default \"//dapi.kakao.com/v2/maps/sdk.js\"\n   */\n  url?: string\n  /**\n   * 보안을 위한 nonce 값 설정\n   */\n  nonce?: string\n  /**\n   * 스크립트 로드 재시도 횟수\n   */\n  retries?: number\n}\n\nexport enum LoaderStatus {\n  INITIALIZED,\n  LOADING,\n  SUCCESS,\n  FAILURE,\n}\n\nconst DEFAULT_ID = \"__reactKakaoMapsSdkloaderId\"\n\n/**\n * Kakao Map Api Loader\n *\n * `new Loader(options).load()` 함수를 이용하여 Api를 비동기적으로 삽입할 수 있습니다.\n *\n * 해당 Loader를 이용시 `react-kakao-maps-sdk` 내부에서 injection 되는 이벤트를 감지하여 kakao map api 로딩 이후에 렌더링을 진행합니다.\n */\nexport class Loader {\n  private static instance: Loader\n  private static loadcheckcallbacks: ((e?: ErrorEvent) => void)[] = []\n\n  public readonly id: string\n  public readonly appkey: string\n  public readonly url: string\n  public readonly libraries: Libraries\n  public readonly nonce: string | undefined\n  public readonly retries: number\n\n  private callbacks: ((e?: ErrorEvent) => void)[] = []\n  private done = false\n  private loading = false\n  private errors: ErrorEvent[] = []\n  private onerrorEvent: ErrorEvent | undefined\n\n  constructor({\n    appkey,\n    id = DEFAULT_ID,\n    libraries = [],\n    nonce,\n    retries = 3,\n    url = \"//dapi.kakao.com/v2/maps/sdk.js\",\n  }: LoaderOptions) {\n    this.id = id\n    this.appkey = appkey\n    this.libraries = libraries\n    this.nonce = nonce\n    this.retries = retries\n    this.url = url\n\n    if (Loader.instance) {\n      if (!Loader.equalOptions(this.options, Loader.instance.options)) {\n        throw new Error(\n          `Loader must not be called again with different options. ${JSON.stringify(\n            this.options\n          )} !== ${JSON.stringify(Loader.instance.options)}`\n        )\n      }\n\n      return Loader.instance\n    }\n    Loader.instance = this\n  }\n\n  public get options() {\n    return {\n      appkey: this.appkey,\n      id: this.id,\n      libraries: this.libraries,\n      nonce: this.nonce,\n      retries: this.retries,\n      url: this.url,\n    }\n  }\n\n  public static isLoaded(): Promise<boolean> {\n    return new Promise((resolve) => {\n      if (window.kakao && window.kakao.maps) return resolve(true)\n\n      if (!Loader.instance)\n        return Loader.loadcheckcallbacks.push((e) => {\n          resolve(!e)\n        })\n\n      if (\n        Loader.instance.status === LoaderStatus.FAILURE ||\n        Loader.instance.status === LoaderStatus.INITIALIZED\n      ) {\n        return resolve(false)\n      }\n\n      if (Loader.instance.status === LoaderStatus.LOADING) {\n        Loader.loadcheckcallbacks.push((e) => resolve(!e))\n      }\n\n      return resolve(true)\n    })\n  }\n\n  public load(): Promise<typeof kakao> {\n    return new Promise((resolve, reject) => {\n      this.loadCallback((err?: ErrorEvent) => {\n        if (!err) {\n          resolve(window.kakao)\n        } else {\n          reject(err.error)\n        }\n      })\n    })\n  }\n\n  public get status(): LoaderStatus {\n    if (this.onerrorEvent) {\n      return LoaderStatus.FAILURE\n    }\n    if (this.done) {\n      return LoaderStatus.SUCCESS\n    }\n    if (this.loading) {\n      return LoaderStatus.LOADING\n    }\n    return LoaderStatus.INITIALIZED\n  }\n\n  private get failed(): boolean {\n    return this.done && !this.loading && this.errors.length >= this.retries + 1\n  }\n\n  private loadCallback(fn: (e?: ErrorEvent) => void): void {\n    this.callbacks.push(fn)\n    this.execute()\n  }\n\n  private resetIfRetryingFailed(): void {\n    if (this.failed) {\n      this.reset()\n    }\n  }\n\n  private reset(): void {\n    this.deleteScript()\n    this.done = false\n    this.loading = false\n    this.errors = []\n    this.onerrorEvent = undefined\n  }\n\n  private execute() {\n    this.resetIfRetryingFailed()\n\n    if (this.done) {\n      this.callback()\n    } else {\n      if (window.kakao && window.kakao.maps) {\n        console.warn(\n          \"Kakao Maps이 이미 외부 요소에 의해 로딩되어 있습니다.\" +\n            \"설정한 옵션과 일치 하지 않을 수 있으며, 이에 따른 예상치 동작이 발생할 수 있습니다.\"\n        )\n        this.callback()\n        return\n      }\n\n      if (!this.loading) {\n        this.loading = true\n        this.setScript()\n      }\n    }\n  }\n\n  private setScript() {\n    if (document.getElementById(this.id)) {\n      this.callback()\n    }\n\n    const url = this.createUrl()\n    const script = document.createElement(\"script\")\n\n    script.id = this.id\n    script.type = \"text/javascript\"\n    script.src = url\n    script.onerror = this.loadErrorCallback.bind(this)\n    script.onload = this.callback.bind(this)\n    script.defer = true\n    script.async = true\n\n    if (this.nonce) {\n      script.nonce = this.nonce\n    }\n\n    document.head.appendChild(script)\n  }\n\n  private loadErrorCallback(\n    event: Event | string,\n    source?: string,\n    lineno?: number,\n    colno?: number,\n    error?: Error\n  ): void {\n    this.errors.push({\n      event,\n      source,\n      // @ts-ignore\n      lineno,\n      // @ts-ignore\n      colno,\n      error,\n    })\n\n    if (this.errors.length <= this.retries) {\n      const delay = this.errors.length * 2 ** this.errors.length\n\n      console.log(`Failed to load Kakao Maps script, retrying in ${delay} ms.`)\n\n      setTimeout(() => {\n        this.deleteScript()\n        this.setScript()\n      }, delay)\n    } else {\n      this.onerrorEvent = this.errors[this.errors.length - 1]\n      this.callback()\n    }\n  }\n\n  public createUrl(): string {\n    let url = this.url\n    url += `?appkey=${this.appkey}`\n\n    if (this.libraries.length) {\n      url += `&libraries=${this.libraries.join(\",\")}`\n    }\n\n    url += `&autoload=false`\n\n    return url\n  }\n\n  private deleteScript() {\n    const script = document.getElementById(this.id)\n    if (script) {\n      script.remove()\n    }\n  }\n\n  private callback() {\n    kakao.maps.load(() => {\n      this.done = true\n      this.loading = false\n\n      this.callbacks.forEach((cb) => {\n        cb(this.onerrorEvent)\n      })\n      this.callbacks = []\n\n      Loader.loadcheckcallbacks.forEach((cb) => {\n        cb(this.onerrorEvent)\n      })\n      Loader.loadcheckcallbacks = []\n    })\n  }\n\n  private static equalOptions(\n    a: typeof Loader.prototype.options,\n    b: typeof Loader.prototype.options\n  ): boolean {\n    if (a.appkey !== b.appkey) return false\n    if (a.id !== b.id) return false\n\n    if (a.libraries.length !== b.libraries.length) return false\n    for (let i = 0; i < a.libraries.length; ++i) {\n      if (a.libraries[i] !== b.libraries[i]) return false\n    }\n    if (a.nonce !== b.nonce) return false\n    if (a.retries !== b.retries) return false\n    if (a.url !== b.url) return false\n    return true\n  }\n}\n","\nconst data = [\n  {\n    id: '1',\n    title: '홍제천 코스',\n\n    location: ['흥남교사거리 -', ' 성산3교'],\n    content:\n      '왕복 약 6km 홍제천을 따라 월드컵경기장 방향으로 달리는 왕복 코스. 홍제천을 사이에 두고 양쪽으로 길이 있어 날씨나 기분에 따라 코스를 선택할 수 있다. 홍제천을 건널 수 있는 다리가 중간에 어디쯤 있는지 미리 알아두면 총 몇 km를 뛸지 계산하고 반환점을 생각할 때 편하다. 반환점을 염두에 두지 않고 풍경에 빠져 달리다 보면 돌아오는 길이 멀어 힘들 수도 있다.',\n    picture: 'img/홍제천.png',\n    point: [ {lat: 37.57540324238941, lng: 126.92648561785495}, {lat: 37.5522068927662, lng: 126.891208914151}]\n  },\n  {\n    id: '2',\n    title: '여의도 코스',\n    location: ['서강대교 남단 여의도 3주차장 -', ' 원효대교 -', ' 여의도샛강공원 -', ' 국회의사당 뒤편'],\n    content:\n      '약 9km 여의도를 한 바퀴 달린다고 할 때 강변북로에서 바라보는 빌딩숲이나 한강 뷰를 연상하기 쉽지만, 자연 풍경을 고려한 러닝을 한다면 샛강생태공원길이 핵심이다. 이름 그대로 샛강을 따라 자연환경이 잘 조성된 곳으로, 달릴 때마다 계절의 변화를 오감으로 느낄 수 있다.',\n    picture: 'img/여의도.png',\n    point: [ {lat: 37.53241486263124, lng: 126.92367957058515}, {lat: 37.526533954581545, lng: 126.94454666885821}, {lat: 37.5182407242957, lng: 126.92157871876582}, {lat: 37.53316768330584, lng: 126.91769371565564}]\n  },\n  {\n    id: '3',\n    title: '청와대 코스',\n    location: ['청와대 -', ' 부암동 -', ' 인왕산로 -', ' 사직공원 -', ' 경복궁'],\n    content:\n      '약 5km  차량 통행이 많지 않고, 나무가 울창해 서울 도심 같지 않은 풍광이 뛰어나고 공기도 맑은 편이다. 오르막길과 내리막길은 물론 포장도로와 비포장도로가 함께 있어 지루하거나 단조롭지 않은 점도 한몫한다. 달리다가 인왕산에서 내려다보는 서울 풍경도 일품이다.',\n    picture: 'img/청와대.png',\n    point: [ {lat: 37.58377750780677, lng: 126.97298660715872}, {lat: 37.59208319632871, lng: 126.96720893607039}, {lat: 37.58112565057105, lng: 126.96227769005303}, {lat: 37.575378585960614, lng: 126.9665144005342}, {lat: 37.575813623968166, lng: 126.97726860195188}]\n  },\n  {\n    id: '4',\n    title: '청계천 코스',\n    location: ['광화문 동아일보사 -', ' JW 메리어트 동대문 스퀘어 서울 왕복'],\n    content:\n      '약 6km  동아일보 앞 스프링 조형물에서 시작해 청계천 길을 따라 동대문까지 뛰면 약 3km. JW 메리어트 동대문스퀘어 서울에서 다시 동아일보 앞까지 뛰면 왕복 6km를 완주할 수 있다. 사람이 많지 않은 이른 아침에 달리면 맑은 물과 주변에서 흔히 찾기 어려운 새, 물고기를 보며 쾌적하게 러닝을 즐길 수 있다.',\n    picture: 'img/청계천.png',\n    point: [ {lat: 37.56943468735823, lng: 126.97783651327181}, {lat: 37.5699950682194, lng: 127.00864812605495}]\n  },\n  {\n    id: '5',\n    title: '중랑천 코스',\n    location: ['월릉교 -', ' 창동교'],\n    content:\n      '왕복 약 10km 중랑천 인근 거주민을 위해 조성한 도보 겸 러닝용 트랙(산책로)과 자전거도로를 즐길 수 있다. 뛰는 내내 강과 강 주변으로 자라난 수풀을 만끽할 수 있고 중간중간 등장하는 다리 위 차량, 저 멀리 아파트 등을 함께 볼 수 있어 자연적이지도, 도시적이지도 않다. 대부분 동네 주민이 찾는 곳이라 러닝 초보가 뛰기에 부담스럽지 않은 점에도 높은 점수를 주고 싶다.',\n    picture: 'img/중랑천.png',\n    point: [ {lat: 37.61653776248404, lng: 127.07020219146995}, {lat: 37.652784094207405, lng: 127.05362345577558}]\n  },\n  {\n    id: '6',\n    title: '잠실대교 코스',\n    location: ['성덕정나들목 -', ' 잠실대교'],\n    content:\n      '왕복 약 8km  저녁 시간에는 사람이 많지 않고 바람이 선선하게 불어와 상쾌하게 달릴 수 있는 코스. 잠실대교의 오렌지빛, 초록빛 조명이 아름다워 그 풍경을 바라보며 뛰는 맛이 있다. 비가 온 다음 날이면 잠실대교 아래 댐처럼 물이 터지는 곳이 있는데 그 물소리를 듣다 보면 기분 전환에 도움이 된다.',\n    picture: 'img/잠실대교.png',\n    point: [ {lat: 37.5371356697265, lng: 127.04694414079258}, {lat: 37.5278500375041, lng: 127.08784671898565}]\n  },\n  {\n    id: '7',\n    title: '압구정나들목 코스',\n    location: ['압구정나들목(압구정토끼굴) -', ' 한남대교'],\n    content:\n      '왕복 7.2km 압구정나들목에서 시작해 성수대교, 동호대교, 한남대교를 지나 다시 돌아오는 코스는 조명 시설이 잘 정비되고 강변에서 휴식을 취하는 이들이 많아 늦은 밤에도 안심하고 달릴 수 있다. 길이 곧고 넓은 데다 바로 옆 한강 뷰도 일품이다. 특히 동호대교에서 성수대교 사이는 큰 나무들이 많아 자연을 즐기며 달리기에 좋다.',\n    picture: 'img/압구정나들목.png',\n    point: [ {lat: 37.53090260300984, lng: 127.04200749333775}, {lat: 37.524601979093816, lng: 127.01598480934186}]\n  },\n  {\n    id: '8',\n    title: '청담나들목 코스',\n    location: ['청담나들목 -', ' 탄천'],\n    content:\n      '왕복 5km 청담나들목에서 탄천까지의 5km는 한강, 작은 다리, 숲 등 다양하고 아름다운 풍경이 펼쳐져 지루함이 없다. 매일 아침 같은 길을 달리더라도 계절의 변화가 눈에 확 들어오고, 길이 좁아졌다 넓어져 러닝에 더욱 집중할 수 있다.',\n    picture: 'img/청담나들목.png',\n    point: [ {lat: 37.5217034353753, lng: 127.06227386197219}, {lat: 37.50032042350184, lng: 127.08075763673455}]\n\n  },\n  // {\n  //   id: '2',\n  //   title: '여의도 코스',\n  //   location: '서강대교 남단 여의도 3주차장 - 원효대교 - 여의도샛강공원 - 국회의사당 뒤편',\n  //   content:\n  //     '약 9km 여의도를 한 바퀴 달린다고 할 때 강변북로에서 바라보는 빌딩숲이나 한강 뷰를 연상하기 쉽지만, 자연 풍경을 고려한 러닝을 한다면 샛강생태공원길이 핵심이다. 이름 그대로 샛강을 따라 자연환경이 잘 조성된 곳으로, 달릴 때마다 계절의 변화를 오감으로 느낄 수 있다.',\n  //   picture: 'img/여의도.png',\n  // },\n  // {\n  //   id: '3',\n  //   title: '청와대 코스',\n  //   location: '청와대 - 부암동 - 인왕산로 - 사직공원 - 경복궁',\n  //   content:\n  //     '약 5km  차량 통행이 많지 않고, 나무가 울창해 서울 도심 같지 않은 풍광이 뛰어나고 공기도 맑은 편이다. 오르막길과 내리막길은 물론 포장도로와 비포장도로가 함께 있어 지루하거나 단조롭지 않은 점도 한몫한다. 달리다가 인왕산에서 내려다보는 서울 풍경도 일품이다.',\n  //   picture: 'img/청와대.png',\n  // },\n  // {\n  //   id: '4',\n  //   title: '청계천 코스',\n  //   location: '광화문 동아일보사 - JW 메리어트 동대문 스퀘어 서울 왕복',\n  //   content:\n  //     '약 6km  동아일보 앞 스프링 조형물에서 시작해 청계천 길을 따라 동대문까지 뛰면 약 3km. JW 메리어트 동대문스퀘어 서울에서 다시 동아일보 앞까지 뛰면 왕복 6km를 완주할 수 있다. 사람이 많지 않은 이른 아침에 달리면 맑은 물과 주변에서 흔히 찾기 어려운 새, 물고기를 보며 쾌적하게 러닝을 즐길 수 있다.',\n  //   picture: 'img/청계천.png',\n  // },\n  // {\n  //   id: '5',\n  //   title: '중랑천 코스',\n  //   location: '월릉교 - 창동교',\n  //   content:\n  //     '왕복 약 10km 중랑천 인근 거주민을 위해 조성한 도보 겸 러닝용 트랙(산책로)과 자전거도로를 즐길 수 있다. 뛰는 내내 강과 강 주변으로 자라난 수풀을 만끽할 수 있고 중간중간 등장하는 다리 위 차량, 저 멀리 아파트 등을 함께 볼 수 있어 자연적이지도, 도시적이지도 않다. 대부분 동네 주민이 찾는 곳이라 러닝 초보가 뛰기에 부담스럽지 않은 점에도 높은 점수를 주고 싶다.',\n  //   picture: 'img/중랑천.png',\n  // },\n  // {\n  //   id: '6',\n  //   title: '잠실대교 코스',\n  //   location: '성덕정나들목 - 잠실대교',\n  //   content:\n  //     '왕복 약 8km  저녁 시간에는 사람이 많지 않고 바람이 선선하게 불어와 상쾌하게 달릴 수 있는 코스. 잠실대교의 오렌지빛, 초록빛 조명이 아름다워 그 풍경을 바라보며 뛰는 맛이 있다. 비가 온 다음 날이면 잠실대교 아래 댐처럼 물이 터지는 곳이 있는데 그 물소리를 듣다 보면 기분 전환에 도움이 된다.',\n  //   picture: 'img/잠실대교.png',\n  // },\n  // {\n  //   id: '7',\n  //   title: '압구정나들목 코스',\n  //   location: '압구정나들목(압구정토끼굴) - 한남대교',\n  //   content:\n  //     '왕복 7.2km 압구정나들목에서 시작해 성수대교, 동호대교, 한남대교를 지나 다시 돌아오는 코스는 조명 시설이 잘 정비되고 강변에서 휴식을 취하는 이들이 많아 늦은 밤에도 안심하고 달릴 수 있다. 길이 곧고 넓은 데다 바로 옆 한강 뷰도 일품이다. 특히 동호대교에서 성수대교 사이는 큰 나무들이 많아 자연을 즐기며 달리기에 좋다.',\n  //   picture: 'img/압구정나들목.png',\n  // },\n  // {\n  //   id: '8',\n  //   title: '청담나들목 코스',\n  //   location: '청담나들목 - 탄천',\n  //   content:\n  //     '왕복 5km 청담나들목에서 탄천까지의 5km는 한강, 작은 다리, 숲 등 다양하고 아름다운 풍경이 펼쳐져 지루함이 없다. 매일 아침 같은 길을 달리더라도 계절의 변화가 눈에 확 들어오고, 길이 좁아졌다 넓어져 러닝에 더욱 집중할 수 있다.',\n  //   picture: 'img/청담나들목.png',\n  // },\n];\n\n\nexport default data;\n","import { useEffect, useLayoutEffect } from \"react\"\n\nconst useIsomorphicLayoutEffect =\n  typeof window !== \"undefined\" && typeof document !== \"undefined\"\n    ? useLayoutEffect\n    : useEffect\n\nexport default useIsomorphicLayoutEffect\n","import useIsomorphicLayoutEffect from \"./useIsomorphicLayoutEffect\"\n\nconst useKakaoEvent = <T extends kakao.maps.event.EventTarget>(\n  /**\n   * 이벤트 타겟\n   */\n  target: T | undefined,\n  /**\n   * event 타입\n   */\n  type: string,\n  /**\n   * 호출될 callback\n   */\n  callback: ((target: T, ...args: any[]) => void) | undefined\n) => {\n  useIsomorphicLayoutEffect(() => {\n    if (!target || !callback) return\n\n    const wrapCallback = (...arg: any[]) => {\n      if (arg === undefined) return callback(target)\n      else return callback(target, ...arg)\n    }\n\n    kakao.maps.event.addListener(target, type, wrapCallback)\n\n    return () => {\n      kakao.maps.event.removeListener(target, type, wrapCallback)\n    }\n  }, [target, type, callback])\n}\n\nexport default useKakaoEvent\n","import React, { useRef, useState, useImperativeHandle } from \"react\"\nimport useIsomorphicLayoutEffect from \"../hooks/useIsomorphicLayoutEffect\"\nimport useKakaoEvent from \"../hooks/useKakaoEvent\"\nimport { Loader } from \"../util/kakaoMapApiLoader\"\n\nexport const KakaoMapContext = React.createContext<kakao.maps.Map>(\n  undefined as unknown as kakao.maps.Map\n)\n\nexport interface MapProps {\n  /**\n   * MapContinaer의 id에 대해서 지정합니다.\n   */\n  id?: string\n\n  /**\n   * MapContainer의 className에 대해서 지정합니다.\n   */\n  className?: string\n\n  /**\n   * MapContainer의 style에 대해서 지정합니다.\n   */\n  style?: React.CSSProperties\n\n  /**\n   * 중심으로 설정할 위치 입니다.\n   */\n  center:\n    | {\n        lat: number\n        lng: number\n      }\n    | {\n        x: number\n        y: number\n      }\n\n  /**\n   * 중심을 이동시킬때 Panto를 사용할지 정합니다.\n   * @default false\n   */\n  isPanto?: boolean\n\n  /**\n   * 중심 좌표를 지정한 좌표 또는 영역으로 부드럽게 이동한다. 필요하면 확대 또는 축소도 수행한다.\n   * 만약 이동할 거리가 지도 화면의 크기보다 클 경우 애니메이션 없이 이동한다.\n   * padding 만큼 제외하고 영역을 계산하며, padding 을 지정하지 않으면 기본값으로 32가 사용된다.\n   */\n  padding?: number\n\n  /**\n   * 확대 수준 (기본값: 3)\n   */\n  level?: number\n\n  /**\n   * 최대 확대 수준\n   */\n  maxLevel?: number\n\n  /**\n   * 최소 확대 수준\n   */\n  minLevel?: number\n\n  /**\n   * 지도 종류 (기본값: 일반 지도)\n   */\n  mapTypeId?: kakao.maps.MapTypeId\n\n  /**\n   * 마우스 드래그, 휠, 모바일 터치를 이용한 시점 변경(이동, 확대, 축소) 가능 여부\n   */\n  draggable?: boolean\n\n  /**\n   * 마우스 휠이나 멀티터치로 지도 확대, 축소 기능을 막습니다. 상황에 따라 지도 확대, 축소 기능을 제어할 수 있습니다.\n   */\n  zoomable?: boolean\n\n  /**\n   * 마우스 휠, 모바일 터치를 이용한 확대 및 축소 가능 여부\n   */\n  scrollwheel?: boolean\n\n  /**\n   * 더블클릭 이벤트 및 더블클릭 확대 가능 여부\n   */\n  disableDoubleClick?: boolean\n\n  /**\n   * 더블클릭 확대 가능 여부\n   */\n  disableDoubleClickZoom?: boolean\n\n  /**\n   * 투영법 지정 (기본값: kakao.maps.ProjectionId.WCONG)\n   */\n  projectionId?: string\n\n  /**\n   * 지도 타일 애니메이션 설정 여부 (기본값: true)\n   */\n  tileAnimation?: boolean\n\n  /**\n   * 키보드의 방향키와 +, – 키로 지도 이동,확대,축소 가능 여부 (기본값: false)\n   */\n  keyboardShortcuts?:\n    | boolean\n    | {\n        /**\n         * 지도 이동 속도\n         */\n        speed: number\n      }\n\n  /**\n   * map 생성 후 해당 객체를 전달하는 함수\n   */\n  onCreate?: (map: kakao.maps.Map) => void\n\n  /**\n   * 중심 좌표가 변경되면 발생한다.\n   */\n  onCenterChanged?: (target: kakao.maps.Map) => void\n\n  /**\n   * 확대 수준이 변경되기 직전 발생한다.\n   */\n  onZoomStart?: (target: kakao.maps.Map) => void\n\n  /**\n   * 확대 수준이 변경되면 발생한다.\n   */\n  onZoomChanged?: (target: kakao.maps.Map) => void\n\n  /**\n   * 지도 영역이 변경되면 발생한다.\n   */\n  onBoundsChanged?: (target: kakao.maps.Map) => void\n\n  /**\n   * 지도를 클릭하면 발생한다.\n   */\n  onClick?: (\n    target: kakao.maps.Map,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n\n  /**\n   * 지도를 더블클릭하면 발생한다.\n   */\n  onDoubleClick?: (\n    target: kakao.maps.Map,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n\n  /**\n   * 지도를 마우스 오른쪽 버튼으로 클릭하면 발생한다.\n   */\n  onRightClick?: (\n    target: kakao.maps.Map,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n\n  /**\n   * 지도에서 마우스 커서를 이동하면 발생한다.\n   */\n  onMouseMove?: (\n    target: kakao.maps.Map,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n\n  /**\n   * 드래그를 시작할 때 발생한다.\n   */\n  onDragStart?: (\n    target: kakao.maps.Map,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n\n  /**\n   * 드래그를 하는 동안 발생한다.\n   */\n  onDrag?: (\n    target: kakao.maps.Map,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n\n  /**\n   * 드래그가 끝날 때 발생한다.\n   */\n  onDragEnd?: (\n    target: kakao.maps.Map,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n\n  /**\n   * 중심 좌표나 확대 수준이 변경되면 발생한다.\n   * 단, 애니메이션 도중에는 발생하지 않는다.\n   */\n  onIdle?: (target: kakao.maps.Map) => void\n\n  /**\n   * 확대수준이 변경되거나 지도가 이동했을때 타일 이미지 로드가 모두 완료되면 발생한다.\n   * 지도이동이 미세하기 일어나 타일 이미지 로드가 일어나지 않은경우 발생하지 않는다.\n   */\n  onTileLoaded?: (target: kakao.maps.Map) => void\n\n  /**\n   * 지도 기본 타일(일반지도, 스카이뷰, 하이브리드)이 변경되면 발생한다.\n   */\n  onMaptypeidChanged?: (target: kakao.maps.Map) => void\n}\n\n/**\n * 기본적인 Map 객체를 생성하는 Comeponent 입니다.\n * props로 받는 `on*` 이벤트는 해당 `kakao.maps.Map` 객체를 함께 인자로 전달 합니다.\n *\n * `ref`를 통해 `map` 객체에 직접 접근하여 사용 또는 onCreate 이벤트를 이용하여 접근이 가능합니다.\n *\n * > *주의 사항* `Map`, `RoadView` 컴포넌트에 한하여, ref 객체가 컴포넌트 마운트 시점에 바로 초기화가 안될 수 있습니다.\n * >\n * > 컴포넌트 마운트 시점에 `useEffect` 를 활용하여, 특정 로직을 수행하고 싶은 경우 `ref` 객체를 사용하는 것보다\n * > `onCreate` 이벤트와 `useState`를 함께 활용하여 제어하는 것을 추천 드립니다.\n */\nconst Map = React.forwardRef<kakao.maps.Map, React.PropsWithChildren<MapProps>>(\n  (\n    {\n      id = \"react-kakao-maps-sdk-map-container\",\n      style,\n      children,\n      center,\n      isPanto = false,\n      padding = 32,\n      className,\n      disableDoubleClick,\n      disableDoubleClickZoom,\n      draggable,\n      zoomable,\n      keyboardShortcuts,\n      level,\n      maxLevel,\n      minLevel,\n      mapTypeId,\n      projectionId,\n      scrollwheel,\n      tileAnimation,\n      onBoundsChanged,\n      onCenterChanged,\n      onClick,\n      onDoubleClick,\n      onDrag,\n      onDragEnd,\n      onDragStart,\n      onIdle,\n      onMaptypeidChanged,\n      onMouseMove,\n      onRightClick,\n      onTileLoaded,\n      onZoomChanged,\n      onZoomStart,\n      onCreate,\n    },\n    ref\n  ) => {\n    const [isLoaded, setIsLoaded] = useState(false)\n    const [map, setMap] = useState<kakao.maps.Map>()\n    const container = useRef<HTMLDivElement>(null)\n\n    useIsomorphicLayoutEffect(() => {\n      Loader.isLoaded().then(setIsLoaded)\n    }, [])\n\n    useIsomorphicLayoutEffect(() => {\n      if (!isLoaded) return\n\n      const MapContainer = container.current\n\n      if (!MapContainer) {\n        return\n      }\n\n      const initalMapCenter =\n        \"lat\" in center\n          ? new kakao.maps.LatLng(center.lat, center.lng)\n          : new kakao.maps.Coords(center.x, center.y)\n\n      const kakaoMap = new kakao.maps.Map(MapContainer, {\n        center: initalMapCenter,\n        disableDoubleClick: disableDoubleClick,\n        disableDoubleClickZoom: disableDoubleClickZoom,\n        draggable: draggable,\n        keyboardShortcuts: keyboardShortcuts,\n        level: level,\n        mapTypeId: mapTypeId,\n        projectionId: projectionId,\n        scrollwheel: scrollwheel,\n        tileAnimation: tileAnimation,\n      })\n\n      setMap(kakaoMap)\n    }, [\n      isLoaded,\n      disableDoubleClick,\n      disableDoubleClickZoom,\n      mapTypeId,\n      tileAnimation,\n    ])\n\n    useImperativeHandle(ref, () => map!, [map])\n\n    useIsomorphicLayoutEffect(() => {\n      if (!map || !onCreate) return\n      onCreate(map)\n    }, [map, onCreate])\n\n    // center position 변경시 map center 변경\n    useIsomorphicLayoutEffect(() => {\n      if (!map) return\n\n      let prevCenter = map.getCenter()\n      if (prevCenter instanceof kakao.maps.Coords) {\n        prevCenter = prevCenter.toLatLng()\n      }\n\n      const centerPosition =\n        \"lat\" in center\n          ? new kakao.maps.LatLng(center.lat, center.lng)\n          : new kakao.maps.Coords(center.x, center.y)\n\n      if (\n        (centerPosition instanceof kakao.maps.LatLng &&\n          centerPosition.equals(prevCenter)) ||\n        (centerPosition instanceof kakao.maps.Coords &&\n          centerPosition.toLatLng().equals(prevCenter))\n      ) {\n        return\n      }\n\n      if (isPanto) {\n        map.panTo(centerPosition, padding)\n      } else {\n        map.setCenter(centerPosition)\n      }\n      // @ts-ignore\n    }, [map, center.lat, center.lng, center.x, center.y])\n\n    useIsomorphicLayoutEffect(() => {\n      if (!map || typeof draggable === \"undefined\") return\n      map.setDraggable(draggable)\n    }, [map, draggable])\n\n    useIsomorphicLayoutEffect(() => {\n      if (!map || typeof zoomable === \"undefined\") return\n      map.setZoomable(zoomable)\n    }, [map, zoomable])\n\n    useIsomorphicLayoutEffect(() => {\n      if (!map || !keyboardShortcuts || typeof keyboardShortcuts !== \"boolean\")\n        return\n      map.setKeyboardShortcuts(keyboardShortcuts)\n    }, [map, keyboardShortcuts])\n\n    useIsomorphicLayoutEffect(() => {\n      if (!map || !level) return\n      map.setLevel(level)\n    }, [map, level])\n\n    useIsomorphicLayoutEffect(() => {\n      if (!map || !mapTypeId) return\n      map.setMapTypeId(mapTypeId)\n    }, [map, mapTypeId])\n\n    useIsomorphicLayoutEffect(() => {\n      if (!map || !projectionId) return\n      map.setProjectionId(projectionId)\n    }, [map, projectionId])\n\n    useIsomorphicLayoutEffect(() => {\n      if (!map || !maxLevel) return\n      map.setMaxLevel(maxLevel)\n    }, [map, maxLevel])\n\n    useIsomorphicLayoutEffect(() => {\n      if (!map || !minLevel) return\n      map.setMinLevel(minLevel)\n    }, [map, minLevel])\n\n    useKakaoEvent(map, \"bounds_changed\", onBoundsChanged)\n    useKakaoEvent(map, \"center_changed\", onCenterChanged)\n    useKakaoEvent(map, \"click\", onClick)\n    useKakaoEvent(map, \"dblclick\", onDoubleClick)\n    useKakaoEvent(map, \"drag\", onDrag)\n    useKakaoEvent(map, \"dragstart\", onDragStart)\n    useKakaoEvent(map, \"dragend\", onDragEnd)\n    useKakaoEvent(map, \"idle\", onIdle)\n    useKakaoEvent(map, \"maptypeid_changed\", onMaptypeidChanged)\n    useKakaoEvent(map, \"mousemove\", onMouseMove)\n    useKakaoEvent(map, \"rightclick\", onRightClick)\n    useKakaoEvent(map, \"tilesloaded\", onTileLoaded)\n    useKakaoEvent(map, \"zoom_changed\", onZoomChanged)\n    useKakaoEvent(map, \"zoom_start\", onZoomStart)\n\n    return (\n      <>\n        <div id={id} style={style} className={className} ref={container}></div>\n        {map && (\n          <KakaoMapContext.Provider value={map}>\n            {children}\n          </KakaoMapContext.Provider>\n        )}\n      </>\n    )\n  }\n)\n\nexport default Map\n","import { useContext } from \"react\"\nimport { KakaoMapContext } from \"../components/Map\"\n\n/**\n * kakao map 객체를 가져오는 hook 입니다.\n * Map 객체 내부가 아니라면 Error를 발생 시킵니다.\n */\nconst useMap = (componentName?: string) => {\n  const kakaoMap = useContext(KakaoMapContext)\n  if (!kakaoMap) {\n    throw new Error(\n      `${\n        componentName ? componentName + \" Component\" : \"useMap\"\n      } must exist inside Map Component!`\n    )\n  }\n\n  return kakaoMap\n}\n\nexport default useMap\n","import React, {\n  useLayoutEffect,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n} from \"react\"\nimport ReactDom from \"react-dom\"\n\ninterface InfoWindowProps {\n  map: kakao.maps.Map | kakao.maps.Roadview\n  position: kakao.maps.LatLng | kakao.maps.Viewpoint\n  marker?: kakao.maps.Marker\n  /**\n   * 인포윈도우를 열 때 지도가 자동으로 패닝하지 않을지의 여부\n   * @default false\n   */\n  disableAutoPan?: boolean\n\n  /**\n   * 삭제 가능한 인포윈도우\n   */\n  removable?: boolean\n\n  /**\n   * 인포윈도우 엘리먼트의 z-index 속성 값\n   */\n  zIndex?: number\n\n  /**\n   * 로드뷰에 올라있는 인포윈도우의 높이 값(m 단위)\n   */\n  altitude?: number\n\n  /**\n   * 로드뷰 상에서 인포윈도우의 가시반경(m 단위), 두 지점 사이의 거리가 지정한 값보다 멀어지면 인포윈도우는 보이지 않게 된다\n   */\n  range?: number\n\n  /**\n   * 인포윈도우 객체 생성후 해당 객체를 반환하는 함수\n   */\n  onCreate?: (infoWindow: kakao.maps.InfoWindow) => void\n}\n\nconst InfoWindow = React.forwardRef<\n  kakao.maps.InfoWindow,\n  React.PropsWithChildren<InfoWindowProps>\n>(\n  (\n    {\n      map,\n      position,\n      marker,\n      children,\n      altitude,\n      disableAutoPan,\n      range,\n      removable,\n      zIndex,\n      onCreate,\n    },\n    ref\n  ) => {\n    const container = useRef(document.createElement(\"div\"))\n\n    const infoWindow = useMemo(() => {\n      const kakaoInfoWindow = new kakao.maps.InfoWindow({\n        altitude: altitude,\n        disableAutoPan: disableAutoPan,\n        range: range,\n        removable: removable,\n        zIndex: zIndex,\n        content: container.current,\n        position: position,\n      })\n      container.current.style.display = \"none\"\n      return kakaoInfoWindow\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [disableAutoPan, removable])\n\n    useImperativeHandle(ref, () => infoWindow, [infoWindow])\n\n    useLayoutEffect(() => {\n      infoWindow.open(map, marker)\n      return () => {\n        infoWindow.close()\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [map, marker])\n\n    useLayoutEffect(() => {\n      if (onCreate) onCreate(infoWindow)\n    }, [infoWindow, onCreate])\n\n    useLayoutEffect(() => {\n      if (!infoWindow) return\n      infoWindow.setPosition(position)\n    }, [infoWindow, position])\n\n    useLayoutEffect(() => {\n      if (!infoWindow || !altitude) return\n      infoWindow.setAltitude(altitude)\n    }, [infoWindow, altitude])\n\n    useLayoutEffect(() => {\n      if (!infoWindow || !range) return\n      infoWindow.setRange(range)\n    }, [infoWindow, range])\n\n    useLayoutEffect(() => {\n      if (!infoWindow || !zIndex) return\n      infoWindow.setZIndex(zIndex)\n    }, [infoWindow, zIndex])\n\n    return (\n      container.current.parentElement &&\n      ReactDom.createPortal(children, container.current.parentElement)\n    )\n  }\n)\n\nexport default InfoWindow\n","import React, { useLayoutEffect, useImperativeHandle, useMemo } from \"react\"\nimport useKakaoEvent from \"../hooks/useKakaoEvent\"\nimport useMap from \"../hooks/useMap\"\n\nexport const KakaoMapMarkerClustererContext =\n  React.createContext<kakao.maps.MarkerClusterer>(\n    undefined as unknown as kakao.maps.MarkerClusterer\n  )\n\nexport interface MarkerClustererProps {\n  /**\n   * 클러스터의 격자 크기. 화면 픽셀 단위이며 해당 격자 영역 안에 마커가 포함되면 클러스터에 포함시킨다\n   * @default 60\n   */\n  gridSize?: number\n  /**\n   * 마커들의 좌표 평균을 클러스터 좌표 설정 여부\n   * @default false\n   */\n  averageCenter?: boolean\n  /**\n   * 클러스터링 할 지도의 최소 레벨 값. 지정한 숫자에 해당하는 레벨 미만에서는 클러스터링 하지 않는다\n   * @default 0\n   */\n  minLevel?: number\n  /**\n   * 클러스터링 할 최소 마커 수\n   * @default 2\n   */\n  minClusterSize?: number\n  /**\n   * 클러스터의 스타일. 여러개를 선언하면 calculator 로 구분된 사이즈 구간마다 서로 다른 스타일을 적용시킬 수 있다\n   */\n  styles?: React.CSSProperties[] | object[]\n  /**\n   * 클러스터에 표시할 문자열 또는 문자열 생성 함수.\n   * @default \"클러스터에 포함된 숫자\"\n   */\n  texts?: string[] | ((size: number) => string)\n  /**\n   * 클러스터 크기를 구분하는 값을 가진 배열 또는 구분값 생성함수\n   * @default [10, 100, 1000, 10000]\n   */\n  calculator?: number[] | ((size: number) => number[])\n  /**\n   * 클러스터 클릭 시 지도 확대 여부. true로 설정하면 클러스터 클릭 시 확대 되지 않는다\n   * @default false\n   */\n  disableClickZoom?: boolean\n  /**\n   * 클러스터 클릭 가능 여부 지정 옵션. false일 경우 클러스터의 clusterclick, clusterdblclick, clusterrightclick 이벤트가 발생하지 않으며, 커서가 변경되지 않는다.\n   * @default true\n   */\n  clickable?: boolean\n  /**\n   * 클러스터에 마우스 over/out 가능 여부 지정 옵션. false일 경우 클러스터의 clusterover, clusterout 이벤트가 발생하지 않는다.\n   * @default true\n   */\n  hoverable?: boolean\n\n  /**\n   * 클러스터 마커를 클릭 했을 때 발생한다.\n   * 이벤트 핸들러 함수 인자로는 Cluster 객체가 넘어온다.\n   * 클러스터 마커 클릭 시 지도가 줌인 되는 경우 원하는 Cluster 객체를 얻지 못할 수도 있다.\n   * 때문에 MarkerClusterer 를 생성할 때 disableClickZoom 옵션을 true로 설정하여\n   * 클러스터 마커를 클릭했을 때 지도가 줌인되지 않도록 설정 후 사용한다.\n   */\n  onClusterclick?: (\n    target: kakao.maps.MarkerClusterer,\n    cluster: kakao.maps.Cluster\n  ) => void\n  /**\n   * 클러스터 마커를 마우스 오버 했을 때 발생한다\n   * 이벤트 핸들러 함수 인자로는 마우스 오버한 Cluster 객체가 넘어온다.\n   */\n  onClusterover?: (\n    target: kakao.maps.MarkerClusterer,\n    cluster: kakao.maps.Cluster\n  ) => void\n  /**\n   * 클러스터 마커를 마우스 아웃 했을 때 발생한다\n   * 이벤트 핸들러 함수 인자로는 마우스 아웃된 Cluster 객체가 넘어온다.\n   */\n  onClusterout?: (\n    target: kakao.maps.MarkerClusterer,\n    cluster: kakao.maps.Cluster\n  ) => void\n  /**\n   * 클러스터 마커를 더블클릭 했을 때 발생한다\n   * 이벤트 핸들러 함수 인자로는 더블클릭한 Cluster 객체가 넘어온다.\n   * MarkerClusterer 를 생성할 때 disableClickZoom 옵션을 true로 설정해야만 이벤트가 발생한다.\n   */\n  onClusterdblclick?: (\n    target: kakao.maps.MarkerClusterer,\n    cluster: kakao.maps.Cluster\n  ) => void\n  /**\n   * 클러스터 마커를 오른쪽 클릭 했을 때 발생한다\n   * 이벤트 핸들러 함수 인자로는 오른쪽 클릭한 Cluster 객체가 넘어온다.\n   */\n  onClusterrightclick?: (\n    target: kakao.maps.MarkerClusterer,\n    cluster: kakao.maps.Cluster\n  ) => void\n  /**\n   * 클러스터링이 완료됐을 때 발생한다.\n   * 이벤트 핸들러 함수 인자로는 생성된 Cluster 객체 전체가 배열로 넘어온다.\n   */\n  onClustered?: (\n    target: kakao.maps.MarkerClusterer,\n    clusters: kakao.maps.Cluster[]\n  ) => void\n  /**\n   * MarkerClusterer 생성 후 해당 객체를 전달하는 함수\n   */\n  onCreate?: (target: kakao.maps.MarkerClusterer) => void\n}\n\nconst MarkerClusterer = React.forwardRef<\n  kakao.maps.MarkerClusterer,\n  React.PropsWithChildren<MarkerClustererProps>\n>(\n  (\n    {\n      children,\n      averageCenter,\n      calculator,\n      clickable,\n      disableClickZoom,\n      gridSize,\n      hoverable,\n      minClusterSize,\n      minLevel,\n      styles,\n      texts,\n      onClusterclick,\n      onClusterdblclick,\n      onClustered,\n      onClusterout,\n      onClusterover,\n      onClusterrightclick,\n      onCreate,\n    },\n    ref\n  ) => {\n    const map = useMap(`MarkerClusterer`)\n    const markerCluster = useMemo(() => {\n      if (!window.kakao.maps.MarkerClusterer) {\n        console.warn(\n          \"clusterer 라이브러리를 별도 로드 해야 사용 가능합니다. `https://apis.map.kakao.com/web/guide/#loadlibrary`\"\n        )\n        return\n      }\n      return new kakao.maps.MarkerClusterer({\n        averageCenter,\n        calculator,\n        clickable,\n        disableClickZoom,\n        gridSize,\n        hoverable,\n        minClusterSize,\n        minLevel,\n        styles,\n        texts,\n      })\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useImperativeHandle(ref, () => markerCluster!, [markerCluster])\n\n    useLayoutEffect(() => {\n      markerCluster?.setMap(map)\n    }, [map, markerCluster])\n\n    useLayoutEffect(() => {\n      if (markerCluster && onCreate) onCreate(markerCluster)\n    }, [markerCluster, onCreate])\n\n    useLayoutEffect(() => {\n      if (markerCluster && gridSize) {\n        markerCluster.setGridSize(gridSize)\n        markerCluster.redraw()\n      }\n    }, [markerCluster, gridSize])\n\n    useLayoutEffect(() => {\n      if (markerCluster && minClusterSize) {\n        markerCluster.setMinClusterSize(minClusterSize)\n        markerCluster.redraw()\n      }\n    }, [markerCluster, minClusterSize])\n\n    useLayoutEffect(() => {\n      if (markerCluster && typeof averageCenter !== \"undefined\") {\n        markerCluster.setAverageCenter(averageCenter)\n        markerCluster.redraw()\n      }\n    }, [markerCluster, averageCenter])\n\n    useLayoutEffect(() => {\n      if (markerCluster && minLevel) {\n        markerCluster.setMinLevel(minLevel)\n        markerCluster.redraw()\n      }\n    }, [markerCluster, minLevel])\n\n    useLayoutEffect(() => {\n      if (markerCluster && texts) {\n        markerCluster.setTexts(texts)\n        markerCluster.redraw()\n      }\n    }, [markerCluster, texts])\n\n    useLayoutEffect(() => {\n      if (markerCluster && calculator) {\n        markerCluster.setCalculator(calculator)\n        markerCluster.redraw()\n      }\n    }, [markerCluster, calculator])\n\n    useLayoutEffect(() => {\n      if (markerCluster && styles) {\n        markerCluster.setStyles(styles)\n        markerCluster.redraw()\n      }\n    }, [markerCluster, styles])\n\n    useKakaoEvent(markerCluster, \"clusterclick\", onClusterclick)\n    useKakaoEvent(markerCluster, \"clusterover\", onClusterover)\n    useKakaoEvent(markerCluster, \"clusterout\", onClusterout)\n    useKakaoEvent(markerCluster, \"clusterdblclick\", onClusterdblclick)\n    useKakaoEvent(markerCluster, \"clusterrightclick\", onClusterrightclick)\n    useKakaoEvent(markerCluster, \"clustered\", onClustered)\n\n    if (!markerCluster) {\n      return null\n    }\n\n    return (\n      <KakaoMapMarkerClustererContext.Provider value={markerCluster}>\n        {children}\n      </KakaoMapMarkerClustererContext.Provider>\n    )\n  }\n)\n\nexport default MarkerClusterer\n","import React, {\n  useContext,\n  useImperativeHandle,\n  useLayoutEffect,\n  useMemo,\n} from \"react\"\nimport useKakaoEvent from \"../hooks/useKakaoEvent\"\nimport InfoWindow from \"./InfoWindow\"\nimport { KakaoMapMarkerClustererContext } from \"./MarkerClusterer\"\n\ninterface MarkerProps {\n  map: kakao.maps.Map | kakao.maps.Roadview\n  position: kakao.maps.LatLng | kakao.maps.Viewpoint\n\n  /**\n   * marker 생성 후 marker 객체를 전달하는 callback\n   */\n  onCreate?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * click 이벤트 핸들러\n   */\n  onClick?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * mouseover 이벤트 핸들러\n   */\n  onMouseOver?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * mouseout 이벤트 핸들러\n   */\n  onMouseOut?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * dragstart 이벤트 핸들러\n   */\n  onDragStart?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * dragend 이벤트 핸들러\n   */\n  onDragEnd?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * 마커의 이미지\n   */\n  image?: kakao.maps.MarkerImage\n\n  /**\n   * 마커 엘리먼트의 타이틀 속성 값 (툴팁)\n   */\n  title?: string\n\n  /**\n   * 드래그 가능한 마커, 로드뷰에 올릴 경우에는 유효하지 않다.\n   */\n  draggable?: boolean\n\n  /**\n   * 클릭 가능한 마커\n   */\n  clickable?: boolean\n\n  /**\n   * 마커 엘리먼트의 z-index 속성 값\n   */\n  zIndex?: number\n\n  /**\n   * 마커 투명도 (0-1)\n   */\n  opacity?: number\n\n  /**\n   * 로드뷰에 올라있는 마커의 높이 값(m 단위)\n   */\n  altitude?: number\n\n  /**\n   * 로드뷰 상에서 마커의 가시반경(m 단위), 두 지점 사이의 거리가 지정한 값보다 멀어지면 마커는 로드뷰에서 보이지 않게 된다.\n   */\n  range?: number\n\n  /**\n   * InfoWindow 옵션\n   */\n  infoWindowOptions?: {\n    /**\n     * 인포윈도우를 열 때 지도가 자동으로 패닝하지 않을지의 여부 (기본값: false)\n     */\n    disableAutoPan?: boolean\n\n    /**\n     * 삭제 가능한 인포윈도우\n     */\n    removable?: boolean\n\n    /**\n     * 인포윈도우 엘리먼트의 z-index 속성 값\n     */\n    zIndex?: number\n\n    /**\n     * 로드뷰에 올라있는 인포윈도우의 높이 값(m 단위)\n     */\n    altitude?: number\n\n    /**\n     * 로드뷰 상에서 인포윈도우의 가시반경(m 단위), 두 지점 사이의 거리가 지정한 값보다 멀어지면 인포윈도우는 보이지 않게 된다\n     */\n    range?: number\n  }\n}\n\nconst Marker = React.forwardRef<\n  kakao.maps.Marker,\n  React.PropsWithChildren<MarkerProps>\n>(\n  (\n    {\n      map,\n      position,\n      children,\n      altitude,\n      clickable,\n      draggable,\n      image,\n      infoWindowOptions,\n      onCreate,\n      onClick,\n      onDragEnd,\n      onDragStart,\n      onMouseOut,\n      onMouseOver,\n      opacity,\n      range,\n      title,\n      zIndex,\n    },\n    ref\n  ) => {\n    const markerCluster = useContext(KakaoMapMarkerClustererContext)\n\n    // Marker 객체는 단 한번만 생성 되도록 함\n    const marker = useMemo(() => {\n      const kakaoMarker = new kakao.maps.Marker({\n        altitude,\n        clickable,\n        draggable,\n        image,\n        opacity,\n        range,\n        title,\n        zIndex,\n        position,\n      })\n\n      return kakaoMarker\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useImperativeHandle(ref, () => marker, [marker])\n\n    useLayoutEffect(() => {\n      if (markerCluster) {\n        markerCluster.addMarker(marker)\n      } else {\n        marker.setMap(map)\n      }\n\n      return () => {\n        if (markerCluster) {\n          markerCluster.removeMarker(marker)\n        } else {\n          marker.setMap(null)\n        }\n      }\n    }, [map, markerCluster, marker])\n\n    useLayoutEffect(() => {\n      if (onCreate) onCreate(marker)\n    }, [marker, onCreate])\n\n    useKakaoEvent(marker, \"click\", onClick)\n    useKakaoEvent(marker, \"dragstart\", onDragStart)\n    useKakaoEvent(marker, \"dragend\", onDragEnd)\n    useKakaoEvent(marker, \"mouseout\", onMouseOut)\n    useKakaoEvent(marker, \"mouseover\", onMouseOver)\n\n    // position이 변경되면 객체를 갱신한다.\n    useLayoutEffect(() => {\n      if (!map || !marker || !position) return\n\n      marker.setPosition(position)\n    }, [map, marker, position])\n\n    // image 객체가 존재하면 이미지를 로드한다\n    useLayoutEffect(() => {\n      if (!map || !marker || !image) return\n\n      marker.setImage(image)\n    }, [map, marker, image])\n\n    // altitude 값이 있으면 높이를 조정한다\n    useLayoutEffect(() => {\n      if (!map || !marker || !altitude) return\n\n      marker.setAltitude(altitude)\n    }, [map, marker, altitude])\n\n    // clickable 값이 있으면 클릭이 가능하도록 한다.\n    useLayoutEffect(() => {\n      if (!map || !marker || typeof clickable === \"undefined\") return\n\n      marker.setClickable(clickable)\n    }, [map, marker, clickable])\n\n    // draggable 값이 있으면 드래그가 가능하도록 한다.\n    useLayoutEffect(() => {\n      if (!map || !marker || typeof draggable === \"undefined\") return\n\n      marker.setDraggable(draggable)\n    }, [map, marker, draggable])\n\n    // opacity 값이 있으면 투명도를 조절한다.\n    useLayoutEffect(() => {\n      if (!map || !marker || !opacity) return\n\n      marker.setOpacity(opacity)\n    }, [map, marker, opacity])\n\n    // range 값이 있으면 마커의 가시반경을 조절한다.\n    useLayoutEffect(() => {\n      if (!map || !marker || !range) return\n\n      marker.setRange(range)\n    }, [map, marker, range])\n\n    // title 값이 있으면 마커의 제목을 조절한다.\n    useLayoutEffect(() => {\n      if (!map || !marker || !title) return\n\n      marker.setTitle(title)\n    }, [map, marker, title])\n\n    // zIndex 값이 있으면 마커의 zindex를 조절한다.\n    useLayoutEffect(() => {\n      if (!map || !marker || !zIndex) return\n\n      marker.setZIndex(zIndex)\n    }, [map, marker, zIndex])\n\n    if (children)\n      return (\n        <InfoWindow\n          position={position}\n          map={map}\n          marker={marker}\n          altitude={infoWindowOptions?.altitude}\n          disableAutoPan={infoWindowOptions?.disableAutoPan}\n          range={infoWindowOptions?.range}\n          removable={infoWindowOptions?.removable}\n          zIndex={infoWindowOptions?.zIndex}\n        >\n          {children}\n        </InfoWindow>\n      )\n\n    return null\n  }\n)\n\nexport default Marker\n","import React, { useMemo } from \"react\"\nimport useMap from \"../hooks/useMap\"\nimport Marker from \"./Marker\"\n\nexport interface MapMarkerProps {\n  /**\n   * 표시 위치\n   */\n  position:\n    | {\n        lat: number\n        lng: number\n      }\n    | {\n        x: number\n        y: number\n      }\n\n  image?: {\n    /**\n     * 표시 이미지 src\n     */\n    src: string\n\n    /**\n     * 표시 이미지 크기\n     */\n    size: {\n      width: number\n      height: number\n    }\n\n    options?: {\n      /**\n       * 마커 이미지의 alt 속성값을 정의한다.\n       */\n      alt?: string\n\n      /**\n       * 마커의 클릭 또는 마우스오버 가능한 영역을 표현하는 좌표값\n       */\n      coords?: string\n\n      /**\n       * 마커의 좌표에 일치시킬 이미지 안의 좌표 (기본값: 이미지의 가운데 아래)\n       */\n      offset?: { x: number; y: number }\n\n      /**\n       * 마커의 클릭 또는 마우스오버 가능한 영역의 모양\n       */\n      shape?: \"default\" | \"rect\" | \"circle\" | \"poly\"\n\n      /**\n       * 스프라이트 이미지 중 사용할 영역의 좌상단 좌표\n       */\n      spriteOrigin?: { x: number; y: number }\n\n      /**\n       * 스프라이트 이미지의 전체 크기\n       */\n      spriteSize?: { width: number; height: number }\n    }\n  }\n\n  /**\n   * click 이벤트 핸들러\n   */\n  onClick?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * mouseover 이벤트 핸들러\n   */\n  onMouseOver?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * mouseout 이벤트 핸들러\n   */\n  onMouseOut?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * dragstart 이벤트 핸들러\n   */\n  onDragStart?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * dragend 이벤트 핸들러\n   */\n  onDragEnd?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * Maker 생성 이벤트 핸들러\n   */\n  onCreate?: (maker: kakao.maps.Marker) => void\n\n  /**\n   * 마커 엘리먼트의 타이틀 속성 값 (툴팁)\n   */\n  title?: string\n\n  /**\n   * 드래그 가능한 마커, 로드뷰에 올릴 경우에는 유효하지 않다.\n   */\n  draggable?: boolean\n\n  /**\n   * 클릭 가능한 마커\n   */\n  clickable?: boolean\n\n  /**\n   * 마커 엘리먼트의 z-index 속성 값\n   */\n  zIndex?: number\n\n  /**\n   * 마커 투명도 (0-1)\n   */\n  opacity?: number\n\n  /**\n   * InfoWindow 옵션\n   */\n  infoWindowOptions?: {\n    /**\n     * 인포윈도우를 열 때 지도가 자동으로 패닝하지 않을지의 여부 (기본값: false)\n     */\n    disableAutoPan?: boolean\n\n    /**\n     * 삭제 가능한 인포윈도우\n     */\n    removable?: boolean\n\n    /**\n     * 인포윈도우 엘리먼트의 z-index 속성 값\n     */\n    zIndex?: number\n  }\n}\n\n/**\n * Map에서 Marker를 생성할 때 사용 합니다.\n * `onCreate` 이벤트를 통해 생성 후 `maker` 객체에 직접 접근하여 초기 설정이 가능합니다.\n */\nconst MapMarker = React.forwardRef<\n  kakao.maps.Marker,\n  React.PropsWithChildren<MapMarkerProps>\n>(\n  (\n    {\n      image,\n      position,\n      children,\n      clickable,\n      draggable,\n      infoWindowOptions,\n      onClick,\n      onDragEnd,\n      onDragStart,\n      onMouseOut,\n      onMouseOver,\n      onCreate,\n      opacity,\n      title,\n      zIndex,\n    },\n    ref\n  ) => {\n    const map = useMap(`MapMarker`)\n\n    const markerImage = useMemo(() => {\n      return (\n        image &&\n        new kakao.maps.MarkerImage(\n          image.src,\n          new kakao.maps.Size(image.size.width, image.size.height),\n          {\n            alt: image.options?.alt,\n            coords: image.options?.coords,\n            offset:\n              image.options?.offset &&\n              new kakao.maps.Point(\n                image.options?.offset.x,\n                image.options?.offset.y\n              ),\n            shape: image.options?.shape,\n            spriteOrigin:\n              image.options?.spriteOrigin &&\n              new kakao.maps.Point(\n                image.options?.spriteOrigin.x,\n                image.options?.spriteOrigin.y\n              ),\n            spriteSize:\n              image.options?.spriteSize &&\n              new kakao.maps.Size(\n                image.options?.spriteSize.width,\n                image.options?.spriteSize.height\n              ),\n          }\n        )\n      )\n    }, [image])\n\n    const markerPosition = useMemo(() => {\n      if (\"lat\" in position) {\n        return new kakao.maps.LatLng(position.lat, position.lng)\n      }\n      return new kakao.maps.Coords(position.x, position.y).toLatLng()\n\n      // @ts-ignore\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [position.lat, position.lng, position.x, position.y])\n\n    return (\n      <Marker\n        map={map}\n        position={markerPosition}\n        image={markerImage}\n        clickable={clickable}\n        draggable={draggable}\n        infoWindowOptions={infoWindowOptions}\n        onClick={onClick}\n        onDragEnd={onDragEnd}\n        onDragStart={onDragStart}\n        onMouseOut={onMouseOut}\n        onMouseOver={onMouseOver}\n        onCreate={onCreate}\n        opacity={opacity}\n        title={title}\n        zIndex={zIndex}\n        ref={ref}\n      >\n        {children}\n      </Marker>\n    )\n  }\n)\n\nexport default MapMarker\n","import React, { useImperativeHandle, useRef, useState } from \"react\"\nimport useIsomorphicLayoutEffect from \"../hooks/useIsomorphicLayoutEffect\"\nimport useKakaoEvent from \"../hooks/useKakaoEvent\"\nimport { Loader } from \"../util/kakaoMapApiLoader\"\n\nexport const KakaoRoadviewContext = React.createContext<kakao.maps.Roadview>(\n  undefined as unknown as kakao.maps.Roadview\n)\n\nexport interface RoadviewProps {\n  /**\n   * roadviewContinaer의 id에 대해서 지정합니다.\n   */\n  id?: string\n\n  /**\n   * roadviewContainer의 className에 대해서 지정합니다.\n   */\n  className?: string\n\n  /**\n   * roadviewContainer의 style에 대해서 지정합니다.\n   */\n  style?: React.CSSProperties\n\n  /**\n   * 중심으로 설정할 위치 입니다.\n   * 해당 lat와 lng에 해당하는 radius범위 안에서 가장가까운 Roadview을 선택합니다.\n   * 만약 없다면 lat, lng로 설정 됩니다.\n   */\n  position: {\n    lat: number\n    lng: number\n    radius: number\n  }\n\n  /**\n   * 로드뷰 시작 지역의 고유 아이디 값.\n   */\n  panoId?: number\n\n  /**\n   * panoId가 유효하지 않을 경우 지도좌표를 기반으로 데이터를 요청할 수평 좌표값.\n   */\n  panoX?: number\n\n  /**\n   * panoId가 유효하지 않을 경우 지도좌표를 기반으로 데이터를 요청할 수직 좌표값.\n   */\n  panoY?: number\n\n  /**\n   * 로드뷰 처음 실행시에 바라봐야 할 수평 각. 0이 정북방향. (0_360)\n   */\n  pan?: number\n\n  /**\n   * 로드뷰 처음 실행시에 바라봐야 할 수직 각.(-90_90)\n   */\n  tilt?: number\n\n  /**\n   * 로드뷰 줌 초기값.(-3_3)\n   */\n  zoom?: number\n\n  /**\n   * 로드뷰 생성후 해당 객체를 전달하는 callback.\n   */\n  onCreate?: (roadview: kakao.maps.Roadview) => void\n\n  /**\n   * 로드뷰가 초기화를 끝내면 발생한다.\n   */\n  onInit?: (target: kakao.maps.Roadview) => void\n\n  /**\n   * 파노라마 ID가 바뀌면 발생한다.\n   */\n  onPanoidChange?: (target: kakao.maps.Roadview) => void\n\n  /**\n   * 시점이 바뀌면 발생한다.\n   */\n  onViewpointChange?: (target: kakao.maps.Roadview) => void\n\n  /**\n   * 지도 좌표가 바뀌면 발생한다.\n   */\n  onPositionChanged?: (target: kakao.maps.Roadview) => void\n\n  /**\n   * getNearestPanoId 동작 실패시 호출 합니다.\n   */\n  onErrorGetNearestPanoId?: (target: kakao.maps.Roadview) => void\n}\n\n/**\n * Roadview를 Roadview를 생성하는 컴포넌트 입니다.\n * props로 받는 `on*` 이벤트는 해당 `kakao.maps.Map` 객체를 반환 합니다.\n * `onCreate` 이벤트를 통해 생성 후 `Roadview` 객체에 직접 접근하여 초기 설정이 가능합니다.\n */\nconst Roadview = React.forwardRef<\n  kakao.maps.Roadview,\n  React.PropsWithChildren<RoadviewProps>\n>(\n  (\n    {\n      id = \"react-kakao-maps-sdk-roadview-container\",\n      style,\n      children,\n      position,\n      className,\n      pan,\n      panoId,\n      panoX,\n      panoY,\n      tilt,\n      zoom,\n      onCreate,\n      onInit,\n      onPanoidChange,\n      onPositionChanged,\n      onViewpointChange,\n      onErrorGetNearestPanoId,\n    },\n    ref\n  ) => {\n    const [isLoaded, setIsLoaded] = useState(false)\n    const [isLoading, setIsLoading] = useState(true)\n    const [roadview, setRoadview] = useState<kakao.maps.Roadview>()\n    const container = useRef<HTMLDivElement>(null)\n\n    useIsomorphicLayoutEffect(() => {\n      Loader.isLoaded().then(setIsLoaded)\n    }, [])\n\n    useIsomorphicLayoutEffect(() => {\n      if (!isLoaded) return\n      if (!container.current) return\n\n      const kakaoRoadview = new kakao.maps.Roadview(container.current, {\n        pan: pan,\n        panoId: panoId,\n        panoX: panoX,\n        panoY: panoY,\n        tilt: tilt,\n        zoom: zoom,\n      })\n\n      setRoadview(kakaoRoadview)\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [isLoaded, panoX, panoY, zoom])\n\n    useImperativeHandle(ref, () => roadview!, [roadview])\n\n    useIsomorphicLayoutEffect(() => {\n      if (!roadview || !onCreate) return\n      onCreate(roadview)\n    }, [roadview, onCreate])\n\n    useIsomorphicLayoutEffect(() => {\n      if (\n        !roadview ||\n        panoId ||\n        (roadview.getPosition().getLat() === position.lat &&\n          roadview.getPosition().getLng() === position.lng)\n      )\n        return\n\n      const newPostion = new kakao.maps.LatLng(position.lat, position.lng)\n\n      new kakao.maps.RoadviewClient().getNearestPanoId(\n        newPostion,\n        position.radius,\n        (panoId) => {\n          if (panoId === null && onErrorGetNearestPanoId) {\n            onErrorGetNearestPanoId(roadview)\n          } else {\n            roadview.setPanoId(panoId, newPostion)\n          }\n        }\n      )\n    }, [\n      roadview,\n      panoId,\n      position.lat,\n      position.lng,\n      position.radius,\n      onErrorGetNearestPanoId,\n    ])\n\n    useIsomorphicLayoutEffect(() => {\n      if (\n        !roadview ||\n        !panoId ||\n        panoId === roadview.getPanoId() ||\n        (roadview.getPosition().getLat() === position.lat &&\n          roadview.getPosition().getLng() === position.lng)\n      )\n        return\n\n      const newPostion = new kakao.maps.LatLng(position.lat, position.lng)\n      roadview.setPanoId(panoId, newPostion)\n    }, [roadview, panoId, position.lat, position.lng])\n\n    useIsomorphicLayoutEffect(() => {\n      if (!roadview) return\n\n      const prevViewpoint = roadview.getViewpoint()\n\n      if (prevViewpoint.pan === pan && prevViewpoint.tilt === tilt) return\n\n      if (pan) prevViewpoint.pan = pan\n      if (tilt) prevViewpoint.tilt = tilt\n      roadview.setViewpoint(prevViewpoint)\n    }, [roadview, pan, tilt])\n\n    useKakaoEvent(roadview, \"init\", (target) => {\n      setIsLoading(false)\n      if (onInit) onInit(target)\n    })\n    useKakaoEvent(roadview, \"panoid_changed\", onPanoidChange)\n    useKakaoEvent(roadview, \"viewpoint_changed\", onViewpointChange)\n    useKakaoEvent(roadview, \"position_changed\", onPositionChanged)\n\n    return (\n      <>\n        <div id={id} className={className} style={style} ref={container}></div>\n        {roadview && !isLoading && (\n          <KakaoRoadviewContext.Provider value={roadview}>\n            {children}\n          </KakaoRoadviewContext.Provider>\n        )}\n      </>\n    )\n  }\n)\n\nexport default Roadview\n","import React, { useMemo } from \"react\"\nimport InfoWindow from \"./InfoWindow\"\nimport useMap from \"../hooks/useMap\"\n\nexport interface MapInfoWindowProps {\n  /**\n   * Contianer id에 대해서 지정합니다.\n   */\n  id?: string\n\n  /**\n   * Contianer className에 대해서 지정합니다.\n   */\n  className?: string\n\n  /**\n   * Contianer style에 대해서 지정합니다.\n   */\n  style?: React.CSSProperties\n\n  /**\n   * 인포윈도가 표시될 위치\n   */\n  position: {\n    lat: number\n    lng: number\n  }\n  /**\n   * 인포윈도우를 열 때 지도가 자동으로 패닝하지 않을지의 여부 (기본값: false)\n   */\n  disableAutoPan?: boolean\n\n  /**\n   * 삭제 가능한 인포윈도우\n   */\n  removable?: boolean\n\n  /**\n   * 인포윈도우 엘리먼트의 z-index 속성 값\n   */\n  zIndex?: number\n\n  /**\n   * 인포윈도우 객체 생성후 해당 객체를 반환하는 함수\n   */\n  onCreate?: (infoWindow: kakao.maps.InfoWindow) => void\n}\n\n/**\n * Map 컴포넌트에서 InfoWindow를 그릴 때 사용됩니다.\n * `onCreate` 이벤트를 통해 생성 후 `infoWindow` 객체에 직접 접근하여 초기 설정이 가능합니다.\n */\nconst MapInfoWindow = React.forwardRef<\n  kakao.maps.InfoWindow,\n  React.PropsWithChildren<MapInfoWindowProps>\n>(\n  (\n    { position, children, disableAutoPan, removable, zIndex, onCreate },\n    ref\n  ) => {\n    const map = useMap(`MapInfoWindow`)\n    const infoPosition = useMemo(() => {\n      return new kakao.maps.LatLng(position.lat, position.lng)\n    }, [position.lat, position.lng])\n\n    return (\n      <InfoWindow\n        disableAutoPan={disableAutoPan}\n        removable={removable}\n        zIndex={zIndex}\n        map={map}\n        position={infoPosition}\n        onCreate={onCreate}\n        ref={ref}\n      >\n        {children}\n      </InfoWindow>\n    )\n  }\n)\n\nexport default MapInfoWindow\n","import React, {\n  useContext,\n  useImperativeHandle,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n} from \"react\"\nimport ReactDOM from \"react-dom\"\nimport useMap from \"../hooks/useMap\"\nimport { KakaoMapMarkerClustererContext } from \"./MarkerClusterer\"\n\nexport interface CustomOverlayMapProps {\n  /**\n   * 커스텀 오버레이의 좌표\n   */\n  position: {\n    lat: number\n    lng: number\n  }\n  /**\n   * true 로 설정하면 컨텐츠 영역을 클릭했을 경우 지도 이벤트를 막아준다.\n   */\n  clickable?: boolean\n\n  /**\n   * 컨텐츠의 x축 위치. 0_1 사이의 값을 가진다. 기본값은 0.5\n   */\n  xAnchor?: number\n\n  /**\n   * 컨텐츠의 y축 위치. 0_1 사이의 값을 가진다. 기본값은 0.5\n   */\n  yAnchor?: number\n\n  /**\n   * 커스텀 오버레이의 z-index\n   */\n  zIndex?: number\n\n  /**\n   * 커스텀 오버레이를 생성 후 해당 객체를 가지고 callback 함수를 실행 시켜줌\n   */\n  onCreate?: (customOverlay: kakao.maps.CustomOverlay) => void\n}\n\n/**\n * Map에 CustomOverlay를 올릴 때 사용하는 컴포넌트 입니다.\n * `onCreate` 이벤트 또는 `ref` 객체를 통해서 `CustomOverlay` 객체에 직접 접근 및 초기 설정 작업을 지정할 수 있습니다.\n */\nconst CustomOverlayMap = React.forwardRef<\n  kakao.maps.CustomOverlay,\n  React.PropsWithChildren<CustomOverlayMapProps>\n>(\n  (\n    { position, children, clickable, xAnchor, yAnchor, zIndex, onCreate },\n    ref\n  ) => {\n    const markerCluster = useContext(KakaoMapMarkerClustererContext)\n\n    const map = useMap(`CustomOverlayMap`)\n    const container = useRef(document.createElement(\"div\"))\n\n    const overlayPosition = useMemo(() => {\n      return new kakao.maps.LatLng(position.lat, position.lng)\n    }, [position.lat, position.lng])\n\n    const overlay = useMemo(() => {\n      const KakaoCustomOverlay = new kakao.maps.CustomOverlay({\n        clickable: clickable,\n        xAnchor: xAnchor,\n        yAnchor: yAnchor,\n        zIndex: zIndex,\n        position: overlayPosition,\n        content: container.current,\n      })\n      container.current.style.display = \"none\"\n\n      return KakaoCustomOverlay\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [clickable, xAnchor, yAnchor])\n\n    useImperativeHandle(ref, () => overlay, [overlay])\n\n    useLayoutEffect(() => {\n      if (!map) return\n\n      if (markerCluster) {\n        markerCluster.addMarker(overlay)\n      } else {\n        overlay.setMap(map)\n      }\n\n      return () => {\n        if (markerCluster) {\n          markerCluster.removeMarker(overlay)\n        } else {\n          overlay.setMap(null)\n        }\n      }\n    }, [map, markerCluster, overlay])\n\n    useLayoutEffect(() => {\n      if (onCreate) onCreate(overlay)\n    }, [overlay, onCreate])\n\n    useLayoutEffect(() => {\n      overlay.setPosition(overlayPosition)\n    }, [overlay, overlayPosition])\n\n    useLayoutEffect(() => {\n      if (!zIndex) return\n      overlay.setZIndex(zIndex)\n    }, [overlay, zIndex])\n\n    return (\n      container.current.parentElement &&\n      ReactDOM.createPortal(children, container.current.parentElement)\n    )\n  }\n)\n\nexport default CustomOverlayMap\n","import React, { useImperativeHandle, useLayoutEffect, useMemo } from \"react\"\nimport useMap from \"../hooks/useMap\"\n\nexport interface MapTypeControlProps {\n  /**\n   * MapTypeControl의 Position를 정의 한다.\n   */\n  position?: kakao.maps.ControlPosition\n}\n\n/**\n * 일반 지도/하이브리드 간 지도 타입 전환 컨트롤을 생성한다.\n * 현재는 일반 지도/하이브리드 간 전환 컨트롤만 지원되며 다른 지도 타입을 제어하는 컨트롤이 필요할 경우에는 직접 구현해야 한다.\n */\nconst MapTypeControl = React.forwardRef<\n  kakao.maps.MapTypeControl,\n  MapTypeControlProps\n>(({ position = kakao.maps.ControlPosition.TOPRIGHT }, ref) => {\n  const map = useMap(`MapTypeControl`)\n\n  const mapTypeControl = useMemo(() => {\n    return new kakao.maps.MapTypeControl()\n  }, [])\n\n  useImperativeHandle(ref, () => mapTypeControl, [mapTypeControl])\n\n  useLayoutEffect(() => {\n    map.addControl(mapTypeControl, position)\n\n    return () => {\n      map.removeControl(mapTypeControl)\n    }\n  }, [map, mapTypeControl, position])\n\n  return null\n})\n\nexport default MapTypeControl\n","import React, { useEffect, useImperativeHandle, useMemo } from \"react\"\nimport useMap from \"../hooks/useMap\"\n\nexport interface ZoomControlProps {\n  /**\n   * ZoomControl의 Position를 정의 한다.\n   */\n  position?: kakao.maps.ControlPosition\n}\n\n/**\n * 확대·축소 컨트롤을 생성한다.\n */\nconst ZoomControl = React.forwardRef<kakao.maps.ZoomControl, ZoomControlProps>(\n  ({ position = kakao.maps.ControlPosition.RIGHT }, ref) => {\n    const map = useMap(`ZoomControl`)\n\n    const ZoomControl = useMemo(() => {\n      return new kakao.maps.ZoomControl()\n    }, [])\n\n    useImperativeHandle(ref, () => ZoomControl, [ZoomControl])\n\n    useEffect(() => {\n      map.addControl(ZoomControl, position)\n\n      return () => {\n        map.removeControl(ZoomControl)\n      }\n\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [map, position])\n\n    return null\n  }\n)\n\nexport default ZoomControl\n","import React, { useImperativeHandle, useLayoutEffect, useMemo } from \"react\"\nimport useKakaoEvent from \"../hooks/useKakaoEvent\"\nimport useMap from \"../hooks/useMap\"\n\nexport interface CircleProps {\n  /**\n   * 중심 좌표를 지정합니다.\n   */\n  center: {\n    lat: number\n    lng: number\n  }\n  /**\n   * 원의 반지름 크기를 지정합니다 (미터 단위).\n   */\n  radius: number\n\n  /**\n   * #xxxxxx 형태의 채움 색 (기본값: ‘#F10000’)\n   */\n  fillColor?: string\n  /**\n   * 채움 불투명도 (0-1) (기본값: 0)\n   */\n  fillOpacity?: number\n  /**\n   * 픽셀 단위의 선 두께 (기본값: 3)\n   */\n  strokeWeight?: number\n  /**\n   * #xxxxxx 형태의 선 색 (기본값: ‘#F10000’)\n   */\n  strokeColor?: string\n  /**\n   * 선 불투명도 (0-1) (기본값: 0.6)\n   */\n  strokeOpacity?: number\n  /**\n   * 선 스타일 (기본값: ‘solid’)\n   */\n  strokeStyle?: kakao.maps.StrokeStyles\n  /**\n   * 원의 z-index 속성 값\n   */\n  zIndex?: number\n\n  /**\n   * 원에 마우스 커서를 올리면 발생한다.\n   */\n  onMouseover?: (\n    target: kakao.maps.Circle,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 마우스 커서가 원에서 벗어나면 발생한다.\n   */\n  onMouseout?: (\n    target: kakao.maps.Circle,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 원에서 마우스를 움직이면 발생한다.\n   */\n  onMousemove?: (\n    target: kakao.maps.Circle,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 원에서 마우스 버튼을 누르면 발생한다.\n   */\n  onMousedown?: (\n    target: kakao.maps.Circle,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 원을 클릭하면 발생한다.\n   */\n  onClick?: (\n    target: kakao.maps.Circle,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n\n  /**\n   * 객체 생성시 호출 됩니다.\n   */\n  onCreate?: (target: kakao.maps.Circle) => void\n}\n\n/**\n * Map 상에 원을 그립니다.\n */\nconst Circle = React.forwardRef<kakao.maps.Circle, CircleProps>(\n  (\n    {\n      center,\n      radius,\n      fillColor,\n      fillOpacity,\n      strokeColor,\n      strokeOpacity,\n      strokeStyle,\n      strokeWeight,\n      zIndex,\n      onMouseover,\n      onMouseout,\n      onMousemove,\n      onMousedown,\n      onClick,\n      onCreate,\n    },\n    ref\n  ) => {\n    const map = useMap(`Circle`)\n\n    const circleCenter = useMemo(() => {\n      return new kakao.maps.LatLng(center.lat, center.lng)\n    }, [center.lat, center.lng])\n\n    const circle = useMemo(() => {\n      return new kakao.maps.Circle({\n        center: circleCenter,\n        radius,\n        fillColor,\n        fillOpacity,\n        strokeColor,\n        strokeOpacity,\n        strokeStyle,\n        strokeWeight,\n        zIndex,\n      })\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useImperativeHandle(ref, () => circle, [circle])\n\n    useLayoutEffect(() => {\n      circle.setMap(map)\n      return () => {\n        circle.setMap(null)\n      }\n    }, [map, circle])\n\n    useLayoutEffect(() => {\n      if (onCreate) onCreate(circle)\n    }, [circle, onCreate])\n\n    useLayoutEffect(() => {\n      if (circle) circle.setPosition(circleCenter)\n    }, [circle, circleCenter])\n\n    useLayoutEffect(() => {\n      circle.setRadius(radius)\n    }, [circle, radius])\n\n    useLayoutEffect(() => {\n      if (!zIndex) return\n      circle.setZIndex(zIndex)\n    }, [circle, zIndex])\n\n    useLayoutEffect(() => {\n      circle.setOptions({\n        fillColor,\n        fillOpacity,\n        strokeColor,\n        strokeOpacity,\n        strokeStyle,\n        strokeWeight,\n      })\n    }, [\n      circle,\n      fillColor,\n      fillOpacity,\n      strokeColor,\n      strokeOpacity,\n      strokeStyle,\n      strokeWeight,\n    ])\n\n    useKakaoEvent(circle, \"mouseover\", onMouseover)\n    useKakaoEvent(circle, \"mouseout\", onMouseout)\n    useKakaoEvent(circle, \"mousemove\", onMousemove)\n    useKakaoEvent(circle, \"mousedown\", onMousedown)\n    useKakaoEvent(circle, \"click\", onClick)\n\n    return null\n  }\n)\n\nexport default Circle\n","import React, { useImperativeHandle, useLayoutEffect, useMemo } from \"react\"\nimport useKakaoEvent from \"../hooks/useKakaoEvent\"\nimport useMap from \"../hooks/useMap\"\n\ninterface LatLng {\n  lat: number\n  lng: number\n}\n\nexport interface PolylineProps {\n  path: LatLng[] | LatLng[][]\n  /**\n   * 화살표 여부\n   */\n  endArrow?: boolean\n  /**\n   * 픽셀 단위의 선 두께 (기본값: 3)\n   */\n  strokeWeight?: number\n  /**\n   * #xxxxxx 형태의 선 색 (기본값: ‘#F10000’)\n   */\n  strokeColor?: string\n  /**\n   * 선 불투명도 (0-1) (기본값: 0.6)\n   */\n  strokeOpacity?: number\n  /**\n   * 선 스타일 (기본값: ‘solid’)\n   */\n  strokeStyle?: kakao.maps.StrokeStyles\n  /**\n   * 선의 z-index 속성 값\n   */\n  zIndex?: number\n\n  /**\n   * 마우스 커서를 올리면 발생한다.\n   */\n  onMouseover?: (\n    target: kakao.maps.Polyline,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 마우스 커서가 벗어나면 발생한다.\n   */\n  onMouseout?: (\n    target: kakao.maps.Polyline,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 마우스를 움직이면 발생한다.\n   */\n  onMousemove?: (\n    target: kakao.maps.Polyline,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 마우스 버튼을 누르면 발생한다.\n   */\n  onMousedown?: (\n    target: kakao.maps.Polyline,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 클릭하면 발생한다.\n   */\n  onClick?: (\n    target: kakao.maps.Polyline,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 객체 생성시 호출 됩니다.\n   */\n  onCreate?: (target: kakao.maps.Polyline) => void\n}\n\n/**\n * Map 상에 폴리라인을 그립니다.\n */\nconst Polyline = React.forwardRef<kakao.maps.Polyline, PolylineProps>(\n  (\n    {\n      path,\n      endArrow,\n      onClick,\n      onMousedown,\n      onMousemove,\n      onMouseout,\n      onMouseover,\n      onCreate,\n      strokeColor,\n      strokeOpacity,\n      strokeStyle,\n      strokeWeight,\n      zIndex,\n    },\n    ref\n  ) => {\n    const map = useMap(`Polyline`)\n\n    const polyLinePath = useMemo(() => {\n      if ((path as LatLng[]).every((v) => v instanceof Array)) {\n        return (path as LatLng[][]).map((v) => {\n          return v.map((p) => new kakao.maps.LatLng(p.lat, p.lng))\n        })\n      }\n      return (path as LatLng[]).map((v) => {\n        return new kakao.maps.LatLng(v.lat, v.lng)\n      })\n    }, [path])\n\n    const polyline = useMemo(() => {\n      return new kakao.maps.Polyline({\n        path: polyLinePath,\n        endArrow,\n        strokeColor,\n        strokeOpacity,\n        strokeStyle,\n        strokeWeight,\n        zIndex,\n      })\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useImperativeHandle(ref, () => polyline, [polyline])\n\n    useLayoutEffect(() => {\n      polyline.setMap(map)\n      return () => polyline.setMap(null)\n    }, [map, polyline])\n\n    useLayoutEffect(() => {\n      if (onCreate) onCreate(polyline)\n    }, [polyline, onCreate])\n\n    useLayoutEffect(() => {\n      polyline.setOptions({\n        endArrow,\n        strokeColor,\n        strokeOpacity,\n        strokeStyle,\n        strokeWeight,\n      })\n    }, [\n      polyline,\n      endArrow,\n      strokeColor,\n      strokeOpacity,\n      strokeStyle,\n      strokeWeight,\n    ])\n\n    useLayoutEffect(() => {\n      polyline.setPath(polyLinePath)\n    }, [polyline, polyLinePath])\n\n    useLayoutEffect(() => {\n      if (zIndex) polyline.setZIndex(zIndex)\n    }, [polyline, zIndex])\n\n    useKakaoEvent(polyline, \"mouseover\", onMouseover)\n    useKakaoEvent(polyline, \"mouseout\", onMouseout)\n    useKakaoEvent(polyline, \"mousemove\", onMousemove)\n    useKakaoEvent(polyline, \"mousedown\", onMousedown)\n    useKakaoEvent(polyline, \"click\", onClick)\n\n    return null\n  }\n)\n\nexport default Polyline\n","import React, { useLayoutEffect, useImperativeHandle, useMemo } from \"react\"\nimport useKakaoEvent from \"../hooks/useKakaoEvent\"\nimport useMap from \"../hooks/useMap\"\n\ninterface LatLng {\n  lat: number\n  lng: number\n}\n\nexport interface PolygonProps {\n  path: LatLng[] | LatLng[][]\n  /**\n   * #xxxxxx 형태의 채움 색 (기본값: ‘#F10000’)\n   */\n  fillColor?: string\n  /**\n   * 채움 불투명도 (0-1) (기본값: 0)\n   */\n  fillOpacity?: number\n  /**\n   * 픽셀 단위의 선 두께 (기본값: 3)\n   */\n  strokeWeight?: number\n  /**\n   * #xxxxxx 형태의 선 색 (기본값: ‘#F10000’)\n   */\n  strokeColor?: string\n  /**\n   * 선 불투명도 (0-1) (기본값: 0.6)\n   */\n  strokeOpacity?: number\n  /**\n   * 선 스타일 (기본값: ‘solid’)\n   */\n  strokeStyle?: kakao.maps.StrokeStyles\n  /**\n   * 선의 z-index 속성 값\n   */\n  zIndex?: number\n\n  /**\n   * 마우스 커서를 올리면 발생한다.\n   */\n  onMouseover?: (\n    target: kakao.maps.Polygon,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 마우스 커서가 벗어나면 발생한다.\n   */\n  onMouseout?: (\n    target: kakao.maps.Polygon,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 마우스를 움직이면 발생한다.\n   */\n  onMousemove?: (\n    target: kakao.maps.Polygon,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 마우스 버튼을 누르면 발생한다.\n   */\n  onMousedown?: (\n    target: kakao.maps.Polygon,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 클릭하면 발생한다.\n   */\n  onClick?: (\n    target: kakao.maps.Polygon,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 객체 생성시 호출 됩니다.\n   */\n  onCreate?: (target: kakao.maps.Polygon) => void\n}\n\n/**\n * Map 상에 다각형을 그립니다.\n */\nconst Polygon = React.forwardRef<kakao.maps.Polygon, PolygonProps>(\n  (\n    {\n      path,\n      onClick,\n      onMousedown,\n      onMousemove,\n      onMouseout,\n      onMouseover,\n      onCreate,\n      strokeColor,\n      strokeOpacity,\n      strokeStyle,\n      strokeWeight,\n      fillColor,\n      fillOpacity,\n      zIndex,\n    },\n    ref\n  ) => {\n    const map = useMap(`Polygon`)\n\n    const polygonPath = useMemo(() => {\n      if ((path as LatLng[]).every((v) => v instanceof Array)) {\n        return (path as LatLng[][]).map((v) => {\n          return v.map((p) => new kakao.maps.LatLng(p.lat, p.lng))\n        })\n      }\n      return (path as LatLng[]).map((v) => {\n        return new kakao.maps.LatLng(v.lat, v.lng)\n      })\n    }, [path])\n\n    const polygon = useMemo(() => {\n      return new kakao.maps.Polygon({\n        path: polygonPath,\n        fillColor,\n        fillOpacity,\n        strokeColor,\n        strokeOpacity,\n        strokeStyle,\n        strokeWeight,\n        zIndex,\n      })\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useImperativeHandle(ref, () => polygon, [polygon])\n\n    useLayoutEffect(() => {\n      polygon.setMap(map)\n      return () => polygon.setMap(null)\n    }, [map, polygon])\n\n    useLayoutEffect(() => {\n      if (onCreate) onCreate(polygon)\n    }, [polygon, onCreate])\n\n    useLayoutEffect(() => {\n      polygon.setOptions({\n        fillColor,\n        fillOpacity,\n        strokeColor,\n        strokeOpacity,\n        strokeStyle,\n        strokeWeight,\n      })\n    }, [\n      polygon,\n      fillColor,\n      fillOpacity,\n      strokeColor,\n      strokeOpacity,\n      strokeStyle,\n      strokeWeight,\n    ])\n\n    useLayoutEffect(() => {\n      polygon.setPath(polygonPath)\n    }, [polygon, polygonPath])\n\n    useLayoutEffect(() => {\n      if (zIndex) polygon.setZIndex(zIndex)\n    }, [polygon, zIndex])\n\n    useKakaoEvent(polygon, \"mouseover\", onMouseover)\n    useKakaoEvent(polygon, \"mouseout\", onMouseout)\n    useKakaoEvent(polygon, \"mousemove\", onMousemove)\n    useKakaoEvent(polygon, \"mousedown\", onMousedown)\n    useKakaoEvent(polygon, \"click\", onClick)\n\n    return null\n  }\n)\n\nexport default Polygon\n","import React, { useImperativeHandle, useLayoutEffect, useMemo } from \"react\"\nimport useKakaoEvent from \"../hooks/useKakaoEvent\"\nimport useMap from \"../hooks/useMap\"\n\ninterface LatLng {\n  lat: number\n  lng: number\n}\n\nexport interface RectangleProps {\n  bounds: {\n    sw: LatLng\n    ne: LatLng\n  }\n  /**\n   * #xxxxxx 형태의 채움 색 (기본값: ‘#F10000’)\n   */\n  fillColor?: string\n  /**\n   * 채움 불투명도 (0-1) (기본값: 0)\n   */\n  fillOpacity?: number\n  /**\n   * 픽셀 단위의 선 두께 (기본값: 3)\n   */\n  strokeWeight?: number\n  /**\n   * #xxxxxx 형태의 선 색 (기본값: ‘#F10000’)\n   */\n  strokeColor?: string\n  /**\n   * 선 불투명도 (0-1) (기본값: 0.6)\n   */\n  strokeOpacity?: number\n  /**\n   * 선 스타일 (기본값: ‘solid’)\n   */\n  strokeStyle?: kakao.maps.StrokeStyles\n  /**\n   * 선의 z-index 속성 값\n   */\n  zIndex?: number\n\n  /**\n   * 마우스 커서를 올리면 발생한다.\n   */\n  onMouseover?: (\n    target: kakao.maps.Rectangle,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 마우스 커서가 벗어나면 발생한다.\n   */\n  onMouseout?: (\n    target: kakao.maps.Rectangle,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 마우스를 움직이면 발생한다.\n   */\n  onMousemove?: (\n    target: kakao.maps.Rectangle,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 마우스 버튼을 누르면 발생한다.\n   */\n  onMousedown?: (\n    target: kakao.maps.Rectangle,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 클릭하면 발생한다.\n   */\n  onClick?: (\n    target: kakao.maps.Rectangle,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 객체 생성시 호출 됩니다.\n   */\n  onCreate?: (target: kakao.maps.Rectangle) => void\n}\n\n/**\n * Map 상에 사각형을 그립니다.\n */\nconst Rectangle = React.forwardRef<kakao.maps.Rectangle, RectangleProps>(\n  (\n    {\n      bounds,\n      onClick,\n      onMousedown,\n      onMousemove,\n      onMouseout,\n      onMouseover,\n      onCreate,\n      strokeColor,\n      strokeOpacity,\n      strokeStyle,\n      strokeWeight,\n      fillColor,\n      fillOpacity,\n      zIndex,\n    },\n    ref\n  ) => {\n    const map = useMap(`Rectangle`)\n\n    const rectangleBounds = useMemo(() => {\n      return new kakao.maps.LatLngBounds(\n        new kakao.maps.LatLng(bounds.sw.lat, bounds.sw.lng),\n        new kakao.maps.LatLng(bounds.ne.lat, bounds.ne.lng)\n      )\n    }, [bounds])\n\n    const rectangle = useMemo(() => {\n      return new kakao.maps.Rectangle({\n        bounds: rectangleBounds,\n        fillColor,\n        fillOpacity,\n        strokeColor,\n        strokeOpacity,\n        strokeStyle,\n        strokeWeight,\n        zIndex,\n      })\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useImperativeHandle(ref, () => rectangle, [rectangle])\n\n    useLayoutEffect(() => {\n      rectangle.setMap(map)\n      return () => rectangle.setMap(null)\n    }, [map, rectangle])\n\n    useLayoutEffect(() => {\n      if (onCreate) onCreate(rectangle)\n    }, [rectangle, onCreate])\n\n    useLayoutEffect(() => {\n      rectangle.setOptions({\n        fillColor,\n        fillOpacity,\n        strokeColor,\n        strokeOpacity,\n        strokeStyle,\n        strokeWeight,\n      })\n    }, [\n      rectangle,\n      fillColor,\n      fillOpacity,\n      strokeColor,\n      strokeOpacity,\n      strokeStyle,\n      strokeWeight,\n    ])\n\n    useLayoutEffect(() => {\n      rectangle.setBounds(rectangleBounds)\n    }, [rectangle, rectangleBounds])\n\n    useLayoutEffect(() => {\n      if (zIndex) rectangle.setZIndex(zIndex)\n    }, [rectangle, zIndex])\n\n    useKakaoEvent(rectangle, \"mouseover\", onMouseover)\n    useKakaoEvent(rectangle, \"mouseout\", onMouseout)\n    useKakaoEvent(rectangle, \"mousemove\", onMousemove)\n    useKakaoEvent(rectangle, \"mousedown\", onMousedown)\n    useKakaoEvent(rectangle, \"click\", onClick)\n\n    return null\n  }\n)\n\nexport default Rectangle\n","import React, { useImperativeHandle, useLayoutEffect, useMemo } from \"react\"\nimport useKakaoEvent from \"../hooks/useKakaoEvent\"\nimport useMap from \"../hooks/useMap\"\n\nexport interface EllipseProps {\n  /**\n   * 중심 좌표를 지정합니다.\n   */\n  center: {\n    lat: number\n    lng: number\n  }\n  /**\n   * 미터 단위의 x축 반지름\n   */\n  rx: number\n\n  /**\n   * 미터 단위의 y축 반지름\n   */\n  ry: number\n\n  /**\n   * #xxxxxx 형태의 채움 색 (기본값: ‘#F10000’)\n   */\n  fillColor?: string\n\n  /**\n   * 채움 불투명도 (0-1) (기본값: 0)\n   */\n  fillOpacity?: number\n\n  /**\n   * 픽셀 단위의 선 두께 (기본값: 3)\n   */\n  strokeWeight?: number\n\n  /**\n   * #xxxxxx 형태의 선 색 (기본값: ‘#F10000’)\n   */\n  strokeColor?: string\n\n  /**\n   * 선 불투명도 (0-1) (기본값: 0.6)\n   */\n  strokeOpacity?: number\n\n  /**\n   * 선 스타일 (기본값: ‘solid’)\n   */\n  strokeStyle?: kakao.maps.StrokeStyles\n\n  /**\n   * 타원의 z-index 속성 값\n   */\n  zIndex?: number\n\n  /**\n   * 타원에 마우스 커서를 올리면 발생한다.\n   */\n  onMouseover?: (\n    target: kakao.maps.Ellipse,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 마우스 커서가 타원에서 벗어나면 발생한다.\n   */\n  onMouseout?: (\n    target: kakao.maps.Ellipse,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 타원에서 마우스를 움직이면 발생한다.\n   */\n  onMousemove?: (\n    target: kakao.maps.Ellipse,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 타원에서 마우스 버튼을 누르면 발생한다.\n   */\n  onMousedown?: (\n    target: kakao.maps.Ellipse,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 타원을 클릭하면 발생한다.\n   */\n  onClick?: (\n    target: kakao.maps.Ellipse,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n\n  /**\n   * 객체 생성시 호출 됩니다.\n   */\n  onCreate?: (target: kakao.maps.Ellipse) => void\n}\n\n/**\n * Map 상에 타원을 그립니다.\n */\nconst Ellipse = React.forwardRef<kakao.maps.Ellipse, EllipseProps>(\n  (\n    {\n      center,\n      rx,\n      ry,\n      fillColor,\n      fillOpacity,\n      strokeColor,\n      strokeOpacity,\n      strokeStyle,\n      strokeWeight,\n      zIndex,\n      onMouseover,\n      onMouseout,\n      onMousemove,\n      onMousedown,\n      onClick,\n      onCreate,\n    },\n    ref\n  ) => {\n    const map = useMap(`Ellipse`)\n\n    const ellipseCenter = useMemo(() => {\n      return new kakao.maps.LatLng(center.lat, center.lng)\n    }, [center.lat, center.lng])\n\n    const ellipse = useMemo(() => {\n      return new kakao.maps.Ellipse({\n        center: ellipseCenter,\n        rx,\n        ry,\n        fillColor,\n        fillOpacity,\n        strokeColor,\n        strokeOpacity,\n        strokeStyle,\n        strokeWeight,\n        zIndex,\n      })\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useImperativeHandle(ref, () => ellipse, [ellipse])\n\n    useLayoutEffect(() => {\n      ellipse.setMap(map)\n\n      return () => {\n        ellipse.setMap(null)\n      }\n    }, [map, ellipse])\n\n    useLayoutEffect(() => {\n      if (onCreate) onCreate(ellipse)\n    }, [ellipse, onCreate])\n\n    useLayoutEffect(() => {\n      if (ellipse) ellipse.setPosition(ellipseCenter)\n    }, [ellipse, ellipseCenter])\n\n    useLayoutEffect(() => {\n      ellipse.setRadius(rx, ry)\n    }, [ellipse, rx, ry])\n\n    useLayoutEffect(() => {\n      if (!zIndex) return\n      ellipse.setZIndex(zIndex)\n    }, [ellipse, zIndex])\n\n    useLayoutEffect(() => {\n      ellipse.setOptions({\n        fillColor,\n        fillOpacity,\n        strokeColor,\n        strokeOpacity,\n        strokeStyle,\n        strokeWeight,\n      })\n    }, [\n      ellipse,\n      fillColor,\n      fillOpacity,\n      strokeColor,\n      strokeOpacity,\n      strokeStyle,\n      strokeWeight,\n    ])\n\n    useKakaoEvent(ellipse, \"mouseover\", onMouseover)\n    useKakaoEvent(ellipse, \"mouseout\", onMouseout)\n    useKakaoEvent(ellipse, \"mousemove\", onMousemove)\n    useKakaoEvent(ellipse, \"mousedown\", onMousedown)\n    useKakaoEvent(ellipse, \"click\", onClick)\n\n    return null\n  }\n)\n\nexport default Ellipse\n","import React, { useImperativeHandle, useLayoutEffect, useMemo } from \"react\"\nimport useMap from \"../hooks/useMap\"\n\nexport interface AbstractOverlayProps {\n  /**\n   * AbstractOverlay에서 필요한 `onAdd` 함수를 구현 합니다.\n   * 위치를 재조정할 필요가 있을 때 호출된다.\n   * 이 함수 내에서 엘리먼트의 위치를 잡아주어야 한다.\n   *\n   * 이때 arrow 함수가 아닌 일반 funtion으로 하여 this 바인딩이 되도록 하여 AbstractOverlay를 상속 받은 객체에 접근하여 필요 기능을 정의 합니다.\n   * ```tsx\n   * const panel = (this as kakao.maps.AbstractOverlay).getPanels().overlayLayer\n   * panel.appendChild(node.current)\n   * ```\n   */\n  draw: () => void\n  /**\n   * 지도에 올릴 때 호출된다.\n   * setMap(map) 을 실행하면 이 함수가 실행된다.\n   * 이 함수 내에서 생성된 `DOM` 객체를 MapPanels에 자식 노드로 넣어주도록 한다.\n   *\n   * ```tsx\n   * var projection = this.getProjection()\n   * var point = projection.pointFromCoords(positionLatlng)\n   * var width = node.current.offsetWidth\n   * var height = node.current.offsetHeight\n   *\n   * console.log(point, width, height)\n   *\n   * node.current.style.left = point.x - width / 2 + \"px\"\n   * node.current.style.top = point.y - height / 2 + \"px\"\n   * ```\n   */\n  onAdd: () => void\n\n  /**\n   * 지도에서 제거할 때 호출된다.\n   * setMap(null) 을 실행하면 이 함수가 실행된다.\n   * 이 함수 내에서 MapPanels에 자식 노드로 넣어준 엘리먼트를 제거하도록 한다.\n   *\n   * ```tsx\n   * this.node.parentNode.removeChild(this.node);\n   * ```\n   */\n  onRemove: () => void\n\n  /**\n   * 생성된 kakao.maps.AbstractOverlay 객체를 받을 수 있는 CallBack 함수 입니다.\n   */\n  onCreate?: (target: kakao.maps.AbstractOverlay) => void\n}\n\n/**\n * `API` 사용자가 직접 정의할 수 있는 오버레이.\n * AbstractOverlay를 상속 받아 사용할 객체를 생성하고 prototype을 연결해 준다.\n * 온전히 동작하는 오버레이를 만들고자 한다면 3가지 인터페이스 메소드( onAdd, draw, onRemove )를 구현해야 한다.\n *\n * 해당 Component 내부에서 `ReactAbstractOveraly` class를 만들어 `onAdd`, `draw`, `onRemove` 를 연결한 후 React Life Cycle에 맞춰 `setMap` 를 자동으로 호출 합니다.\n *\n * *경고* `draw`, `onAdd`, `onRemove` 의 경우 반드시 익명함수가 **아닌** 형태로 만들어서 전달해야 합니다.\n * `this.~` 를 통한 접근이 가능하니 해당 부분을 이용해서 구현 해주세요!\n *\n * ### Example Code\n *\n * ```jsx live\n * function () {\n *  const TooltipMarker = ({\n *    position,\n *  }) => {\n *    const node = useRef(document.createElement(\"div\"))\n *\n *    const positionLatlng = useMemo(() => {\n *      return new kakao.maps.LatLng(position.lat, position.lng)\n *    }, [position.lat, position.lng])\n *\n *    function onAdd() {\n *      const panel = this.getPanels()\n *        .overlayLayer\n *      panel.appendChild(node.current)\n *    }\n *\n *    function onRemove() {\n *      node.current.parentNode.removeChild(node.current)\n *    }\n *\n *    function draw() {\n *      var projection = this.getProjection()\n *      var point = projection.pointFromCoords(positionLatlng)\n *      var width = node.current.offsetWidth\n *      var height = node.current.offsetHeight\n *\n *      console.log(point, width, height)\n *\n *      node.current.style.left = point.x - width / 2 + \"px\"\n *      node.current.style.top = point.y - height / 2 + \"px\"\n *    }\n *\n *    useEffect(() => {\n *      node.current.style.position = \"absolute\"\n *      node.current.style.whiteSpace = \"nowrap\"\n *    }, [])\n *\n *    return (\n *      <>\n *        <AbstractOverlay onAdd={onAdd} onRemove={onRemove} draw={draw} />\n *        {ReactDOM.createPortal(\n *          <div\n *            style={{\n *              color: \"#000\",\n *              backgroundColor: \"#fff\",\n *              padding: \"5px\",\n *              borderRadius: \"15px\",\n *            }}\n *          >\n *            Hello Marker!\n *          </div>,\n *          node.current\n *        )}\n *      </>\n *    )\n *  }\n *\n *  return (\n *    <>\n *      <Map // 지도를 표시할 Container\n *        center={{\n *          // 지도의 중심좌표\n *          lat: 37.54699,\n *          lng: 127.09598,\n *        }}\n *        style={{\n *          // 지도의 크기\n *          width: \"100%\",\n *          height: \"450px\",\n *        }}\n *        level={3} // 지도의 확대 레벨\n *      >\n *        <TooltipMarker\n *          position={{\n *            lat: 37.54699,\n *            lng: 127.09598,\n *          }}\n *        />\n *      </Map>\n *    </>\n *  )\n *}\n * ```\n */\nconst AbstractOverlay = React.forwardRef<\n  kakao.maps.AbstractOverlay,\n  AbstractOverlayProps\n>(({ draw, onAdd, onRemove, onCreate }, ref) => {\n  const map = useMap()\n\n  const reactAbstractOverlay = useMemo(() => {\n    class ReactAbstractOveraly extends kakao.maps.AbstractOverlay {\n      constructor(draw: () => void, onAdd: () => void, onRemove: () => void) {\n        super()\n        this.draw = draw\n        this.onAdd = onAdd\n        this.onRemove = onRemove\n      }\n    }\n    const overlay = new ReactAbstractOveraly(draw, onAdd, onRemove)\n    return overlay\n  }, [draw, onAdd, onRemove])\n\n  useImperativeHandle(ref, () => reactAbstractOverlay, [reactAbstractOverlay])\n\n  useLayoutEffect(() => {\n    reactAbstractOverlay.setMap(map)\n\n    return () => {\n      reactAbstractOverlay.setMap(null)\n    }\n  }, [map, reactAbstractOverlay])\n\n  useLayoutEffect(() => {\n    if (onCreate) onCreate(reactAbstractOverlay)\n  }, [reactAbstractOverlay, onCreate])\n\n  return null\n})\n\nexport default AbstractOverlay\n","import { useContext } from \"react\"\nimport { KakaoRoadviewContext } from \"../components/Roadview\"\n\n/**\n * kakao roadview 객체를 가져오는 hook 입니다.\n * Roadview 객체 내부가 아니라면 Error를 발생 시킵니다.\n */\nconst useRoadview = (componentName?: string) => {\n  const kakaoRoadview = useContext(KakaoRoadviewContext)\n  if (!kakaoRoadview) {\n    throw new Error(\n      `${\n        componentName ? componentName + \" Component\" : \"useRoadview\"\n      } must exist inside Roadview Component!`\n    )\n  }\n\n  return kakaoRoadview\n}\n\nexport default useRoadview\n","import React, {\n  ReactNode,\n  Ref,\n  useImperativeHandle,\n  useLayoutEffect,\n  useMemo,\n} from \"react\"\nimport useMap from \"../hooks/useMap\"\n\nexport const DrawingManagerContext =\n  React.createContext<kakao.maps.drawing.DrawingManager>(\n    undefined as unknown as kakao.maps.drawing.DrawingManager\n  )\n\nexport type DrawingManagerProps<\n  T extends kakao.maps.drawing.OverlayType = kakao.maps.drawing.OverlayType\n> = Partial<kakao.maps.drawing.OverlayOptions> &\n  Pick<kakao.maps.drawing.OverlayOptions, `${T}Options`> & {\n    /**\n     * 마우스 오버 시 가이드 툴팁 표시 여부. ‘draw’, ‘drag’, ‘edit’ 3가지를 지정할 수 있다 (기본값: 모두 표시 안함)\n     * 예를들어 [‘draw’]로 설정하면 객체를 그릴때 가이드 툴팁이 표시된다\n     */\n    guideTooltip?: Array<\"draw\" | \"drag\" | \"edit\">\n    /**\n     * 사용할 그리기 요소 지정한다 (기본값: 모든 그리기 요소)\n     */\n    drawingMode?: Array<T>\n\n    /**\n     * 그리기 요소를 선택하면 발생한다.\n     */\n    onSelect?: (\n      drawingManager: kakao.maps.drawing.DrawingManager<T>,\n      event: kakao.maps.drawing.MouseEvent\n    ) => void\n\n    /**\n     * 그리기를 시작하면 발생한다.\n     */\n    onDrawstart?: (\n      drawingManager: kakao.maps.drawing.DrawingManager<T>,\n      event: kakao.maps.drawing.MouseEvent\n    ) => void\n\n    /**\n     * 그리기 시작 후, 마우스를 이동하면 발생한다.\n     */\n    onDraw?: (\n      drawingManager: kakao.maps.drawing.DrawingManager<T>,\n      event: kakao.maps.drawing.MouseEvent\n    ) => void\n\n    /**\n     * 그리기를 시작하면 발생한다.\n     */\n    onDrawend?: (\n      drawingManager: kakao.maps.drawing.DrawingManager<T>,\n      event: kakao.maps.drawing.MouseEvent\n    ) => void\n\n    /**\n     * 다음 단계 그리기를 하면 발생한다. (Polyline, Polygon, Arrow 한정)\n     */\n    onDrawnext?: (\n      drawingManager: kakao.maps.drawing.DrawingManager<T>,\n      event: kakao.maps.drawing.MouseEvent\n    ) => void\n\n    /**\n     * 그리기를 취소하면 발생한다.\n     */\n    onCancle?: (\n      drawingManager: kakao.maps.drawing.DrawingManager<T>,\n      event: kakao.maps.drawing.MouseEvent\n    ) => void\n\n    /**\n     * 그리기 요소를 삭제하면 발생한다.\n     */\n    onRemove?: (\n      drawingManager: kakao.maps.drawing.DrawingManager<T>,\n      event: kakao.maps.drawing.MouseEvent\n    ) => void\n\n    /**\n     * 그리기 요소들의 상태가 변경되면 발생한다.\n     * 각 요소의 생성/수정/이동/삭제 동작과 undo 또는 redo 함수 호출이 이에 해당한다.\n     */\n    onStateChanged?: (\n      drawingManager: kakao.maps.drawing.DrawingManager<T>\n    ) => void\n\n    /**\n     * 객체 생성후 해당 이벤트가 발생합니다.\n     */\n    onCreate?: (drawingManager: kakao.maps.drawing.DrawingManager<T>) => void\n\n    /**\n     * Toolbox에 대해서 추가할 때 사용합니다.\n     */\n    children?: ReactNode\n  }\n\nfunction useDrawingManagerEvent<T extends kakao.maps.drawing.OverlayType>(\n  target: kakao.maps.drawing.DrawingManager<T> | undefined,\n  type:\n    | \"drawstart\"\n    | \"draw\"\n    | \"drawend\"\n    | \"drawnext\"\n    | \"select\"\n    | \"cancel\"\n    | \"remove\"\n    | \"state_changed\",\n  callback:\n    | ((target: kakao.maps.drawing.DrawingManager<T>, ...args: any) => void)\n    | undefined\n) {\n  useLayoutEffect(() => {\n    if (!target || !callback) return\n\n    const wrapCallback = (...arg: any[]) => {\n      if (arg === undefined) return callback(target)\n      else return callback(target, ...arg)\n    }\n\n    // @ts-ignore\n    target.addListener(type, wrapCallback)\n  }, [callback, target, type])\n}\n\n/**\n * 그리기 관리자 객체를 생성하는 컴포넌트 입니다.\n *\n * 초기 생성자에 필요한 Props는 최초 렌더링에만 반영을 하고 이후에는 값이 변경되더라도 적용되지 않습니다.\n *\n * > `on~` 시리즈를 제외한 props는 초기 렌더링 이후 작동 안함\n *\n * DrawingManager는 이전 Map, Marker, CustomOverlay와 달리 Props를 통해 제어를 하는 것이 아닌 직접 DrawingManager 객체를 이용하여 제어를 해야 합니다.\n *\n * 이를 위해 ref 객체를 통해 `DrawingManager` 객체를 접근 할 수 있으며, 이를 활용하여 여러 이벤트 처리 및 제어가 가능합니다.\n *\n * TypeScript 사용자를 위한 `Generic`이 적용되어 있으므로, `ref` 객체에 대한 typing 및 `drawingMode`에 대해 확실하게 정의해야 합니다.\n *\n * ```tsx\n * const Main = () => {\n *     const managerRef = useRef<kakao.maps.drawing.DrawingManager<\n *       kakao.maps.drawing.OverlayType.POLYLINE\n *     >>(null);\n *\n *     function selectOverlay(type: string) {\n *       const manager = managerRef.current;\n *       manager.cancel();\n *       manager.select(kakao.maps.drawing.OverlayType.POLYLINE);\n *     }\n *\n *     return (\n *       <>\n *         <Map\n *           center={{\n *             // 지도의 중심좌표\n *             lat: 33.450701,\n *             lng: 126.570667,\n *           }}\n *           style={{\n *             width: \"100%\",\n *             height: \"450px\",\n *           }}\n *           level={3} // 지도의 확대 레벨\n *         >\n *           <DrawingManager\n *             ref={managerRef}\n *             drawingMode={[\n *               kakao.maps.drawing.OverlayType.POLYLINE,\n *             ]}\n *             guideTooltip={['draw', 'drag', 'edit']}\n *             polylineOptions={{\n *               draggable: true,\n *               removable: true,\n *               editable: true\n *             }}\n *           />\n *         </Map>\n *         <button onClick={(e) => {\n *           selectOverlay('POLYLINE')\n *         }}>선</button>\n *       </>\n *     )\n *   }\n * ```\n *\n * > JavaScript 코드 버전\n *\n * ```jsx live\n * function() {\n *   const Main = () => {\n *     const managerRef = useRef(null);\n *\n *     function selectOverlay() {\n *       const manager = managerRef.current;\n *       manager.cancel();\n *       manager.select(kakao.maps.drawing.OverlayType.POLYLINE);\n *     }\n *\n *     return (\n *       <>\n *         <Map\n *           center={{\n *             // 지도의 중심좌표\n *             lat: 33.450701,\n *             lng: 126.570667,\n *           }}\n *           style={{\n *             width: \"100%\",\n *             height: \"450px\",\n *           }}\n *           level={3} // 지도의 확대 레벨\n *         >\n *           <DrawingManager\n *             ref={managerRef}\n *             drawingMode={[\n *               kakao.maps.drawing.OverlayType.POLYLINE,\n *             ]}\n *             guideTooltip={['draw', 'drag', 'edit']}\n *             polylineOptions={{\n *               draggable: true,\n *               removable: true,\n *               editable: true\n *             }}\n *           />\n *         </Map>\n *         <button onClick={selectOverlay}>선</button>\n *       </>\n *     )\n *   }\n *   return (<Main />)\n * }\n * ```\n */\nconst DrawingManager = React.forwardRef(function <\n  T extends kakao.maps.drawing.OverlayType\n>(\n  {\n    arrowOptions,\n    circleOptions,\n    ellipseOptions,\n    markerOptions,\n    polygonOptions,\n    polylineOptions,\n    rectangleOptions,\n    drawingMode,\n    guideTooltip,\n    onSelect,\n    onDrawstart,\n    onDraw,\n    onDrawend,\n    onDrawnext,\n    onCancle,\n    onRemove,\n    onStateChanged,\n    onCreate,\n    children,\n  }: DrawingManagerProps<T>,\n  ref: Ref<kakao.maps.drawing.DrawingManager<T>>\n) {\n  const map = useMap(\"Toolbox\")\n\n  const drawingManager = useMemo(\n    () => {\n      if (!window.kakao.maps.drawing) {\n        console.warn(\n          \"drawing 라이브러리를 별도 로드 해야 사용 가능합니다. `https://apis.map.kakao.com/web/guide/#loadlibrary`\"\n        )\n        return\n      }\n\n      // @ts-ignore\n      return new kakao.maps.drawing.DrawingManager({\n        map,\n        drawingMode,\n        guideTooltip,\n        arrowOptions,\n        circleOptions,\n        ellipseOptions,\n        markerOptions,\n        polygonOptions,\n        polylineOptions,\n        rectangleOptions,\n      })\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  )\n  useImperativeHandle(ref, () => drawingManager!, [drawingManager])\n\n  useLayoutEffect(() => {\n    drawingManager && onCreate && onCreate(drawingManager)\n  }, [drawingManager, onCreate])\n\n  useDrawingManagerEvent(drawingManager, \"select\", onSelect)\n  useDrawingManagerEvent(drawingManager, \"drawstart\", onDrawstart)\n  useDrawingManagerEvent(drawingManager, \"draw\", onDraw)\n  useDrawingManagerEvent(drawingManager, \"drawend\", onDrawend)\n  useDrawingManagerEvent(drawingManager, \"drawnext\", onDrawnext)\n  useDrawingManagerEvent(drawingManager, \"cancel\", onCancle)\n  useDrawingManagerEvent(drawingManager, \"remove\", onRemove)\n  useDrawingManagerEvent(drawingManager, \"state_changed\", onStateChanged)\n\n  if (!drawingManager) return null\n\n  return (\n    <DrawingManagerContext.Provider value={drawingManager}>\n      {children}\n    </DrawingManagerContext.Provider>\n  )\n}) as unknown as <\n  T extends kakao.maps.drawing.OverlayType = kakao.maps.drawing.OverlayType\n>(\n  _props: DrawingManagerProps<T> &\n    React.RefAttributes<kakao.maps.drawing.DrawingManager<T>>\n) => null\n\nexport default DrawingManager\n","import React, {\n  useImperativeHandle,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n} from \"react\"\nimport ReactDOM from \"react-dom\"\nimport useRoadview from \"../hooks/useRoadview\"\n\nexport interface CustomOverlayRoadviewProps {\n  /**\n   * 커스텀 오버레이의 좌표\n   */\n  position:\n    | {\n        lat: number\n        lng: number\n      }\n    | {\n        /**\n         * 가로 각도, 0부터 360 사이의 값으로 북쪽부터 시계방향으로 대응한다.\n         */\n        pan: number\n        /**\n         * 세로 각도, -90부터 90 사이의 값으로 위쪽부터 아래쪽으로 대응한다.\n         */\n        tilt: number\n        /**\n         * 확대 수준, -3부터 3 사이의 정수이다.\n         */\n        zoom?: number\n        /**\n         * 특정 위치의 로드뷰 고유의 아이디 값\n         */\n        panoId?: number\n      }\n  /**\n   * true 로 설정하면 컨텐츠 영역을 클릭했을 경우 지도 이벤트를 막아준다.\n   */\n  clickable?: boolean\n\n  /**\n   * 컨텐츠의 x축 위치. 0_1 사이의 값을 가진다. 기본값은 0.5\n   */\n  xAnchor?: number\n\n  /**\n   * 컨텐츠의 y축 위치. 0_1 사이의 값을 가진다. 기본값은 0.5\n   */\n  yAnchor?: number\n\n  /**\n   * 커스텀 오버레이의 z-index\n   */\n  zIndex?: number\n\n  /**\n   * 로드뷰상에서 커스텀 오버레이의 높이(위치)를 지정한다.\n   * 단위는 m(미터)이며 현재 로드뷰의 바닥 높이를 기준으로 떨어져있는 높이를 말한다.\n   */\n  altitude?: number\n\n  /**\n   * 커스텀 오버레이의 가시반경을 설정한다.\n   * 로드뷰의 위치와 커스텀 오버레이의 위치 사이의 거리가 가시반경 이내일 경우에만 로드뷰상에 노출된다.\n   * 단위는 m(미터)이며 기본값은 500m이다.\n   */\n  range?: number\n\n  /**\n   * 커스텀 오버레이를 생성 후 해당 객체를 가지고 callback 함수를 실행 시켜줌\n   */\n  onCreate?: (customOverlay: kakao.maps.CustomOverlay) => void\n}\n\n/**\n * Roadview에 CustomOverlay를 올릴 때 사용하는 컴포넌트 입니다.\n * `onCreate` 이벤트 또는 `ref` 객체를 통해서 `CustomOverlay` 객체에 직접 접근 및 초기 설정 작업을 지정할 수 있습니다.\n */\nconst CustomOverlayRoadview = React.forwardRef<\n  kakao.maps.CustomOverlay,\n  React.PropsWithChildren<CustomOverlayRoadviewProps>\n>(\n  (\n    {\n      position,\n      children,\n      clickable,\n      xAnchor,\n      yAnchor,\n      zIndex,\n      altitude,\n      range,\n      onCreate,\n    },\n    ref\n  ) => {\n    const roadview = useRoadview(`CustomOverlayRoadview`)\n    const container = useRef(document.createElement(\"div\"))\n\n    const overlayPosition = useMemo(() => {\n      if (\"lat\" in position) {\n        return new kakao.maps.LatLng(position.lat, position.lng)\n      }\n      return new kakao.maps.Viewpoint(\n        position.pan,\n        position.tilt,\n        position.zoom,\n        position.panoId\n      )\n      /* eslint-disable react-hooks/exhaustive-deps */\n    }, [\n      // @ts-ignore\n      position.lat,\n      // @ts-ignore\n      position.lng,\n      // @ts-ignore\n      position.pan,\n      // @ts-ignore\n      position.tilt,\n      // @ts-ignore\n      position.zoom,\n      // @ts-ignore\n      position.panoId,\n    ])\n    /* eslint-enable react-hooks/exhaustive-deps */\n\n    const overlay = useMemo(() => {\n      const KakaoCustomOverlay = new kakao.maps.CustomOverlay({\n        clickable: clickable,\n        xAnchor: xAnchor,\n        yAnchor: yAnchor,\n        zIndex: zIndex,\n        position: overlayPosition,\n        content: container.current,\n      })\n      container.current.style.display = \"none\"\n      return KakaoCustomOverlay\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [clickable, xAnchor, yAnchor])\n\n    useImperativeHandle(ref, () => overlay, [overlay])\n\n    useLayoutEffect(() => {\n      if (!roadview) return\n\n      overlay.setMap(roadview)\n\n      return () => {\n        overlay.setMap(null)\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [overlay, roadview])\n\n    useLayoutEffect(() => {\n      if (onCreate) onCreate(overlay)\n    }, [overlay, onCreate])\n\n    useLayoutEffect(() => {\n      overlay.setPosition(overlayPosition)\n    }, [overlay, overlayPosition])\n\n    useLayoutEffect(() => {\n      if (!zIndex) return\n      overlay.setZIndex(zIndex)\n    }, [overlay, zIndex])\n\n    useLayoutEffect(() => {\n      if (!altitude) return\n      overlay.setAltitude(altitude)\n    }, [overlay, altitude])\n\n    useLayoutEffect(() => {\n      if (!range) return\n      overlay.setRange(range)\n    }, [overlay, range])\n\n    return (\n      container.current.parentElement &&\n      ReactDOM.createPortal(children, container.current.parentElement)\n    )\n  }\n)\n\nexport default CustomOverlayRoadview\n","import React, { useMemo } from \"react\"\nimport useRoadview from \"../hooks/useRoadview\"\nimport Marker from \"./Marker\"\n\nexport interface RoadviewMarkerProps {\n  /**\n   * 표시 위치\n   */\n  position:\n    | {\n        lat: number\n        lng: number\n      }\n    | {\n        x: number\n        y: number\n      }\n    | {\n        /**\n         * 가로 각도, 0부터 360 사이의 값으로 북쪽부터 시계방향으로 대응한다.\n         */\n        pan: number\n        /**\n         * 세로 각도, -90부터 90 사이의 값으로 위쪽부터 아래쪽으로 대응한다.\n         */\n        tilt: number\n        /**\n         * 확대 수준, -3부터 3 사이의 정수이다.\n         */\n        zoom?: number\n        /**\n         * 특정 위치의 로드뷰 고유의 아이디 값\n         */\n        panoId?: number\n      }\n\n  image?: {\n    /**\n     * 표시 이미지 src\n     */\n    src: string\n\n    /**\n     * 표시 이미지 크기\n     */\n    size: {\n      width: number\n      height: number\n    }\n\n    options?: {\n      /**\n       * 마커 이미지의 alt 속성값을 정의한다.\n       */\n      alt?: string\n\n      /**\n       * 마커의 클릭 또는 마우스오버 가능한 영역을 표현하는 좌표값\n       */\n      coords?: string\n\n      /**\n       * 마커의 좌표에 일치시킬 이미지 안의 좌표 (기본값: 이미지의 가운데 아래)\n       */\n      offset?: { x: number; y: number }\n\n      /**\n       * 마커의 클릭 또는 마우스오버 가능한 영역의 모양\n       */\n      shape?: \"default\" | \"rect\" | \"circle\" | \"poly\"\n\n      /**\n       * 스프라이트 이미지 중 사용할 영역의 좌상단 좌표\n       */\n      spriteOrigin?: { x: number; y: number }\n\n      /**\n       * 스프라이트 이미지의 전체 크기\n       */\n      spriteSize?: { width: number; height: number }\n    }\n  }\n\n  /**\n   * click 이벤트 핸들러\n   */\n  onClick?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * mouseover 이벤트 핸들러\n   */\n  onMouseOver?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * mouseout 이벤트 핸들러\n   */\n  onMouseOut?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * dragstart 이벤트 핸들러\n   */\n  onDragStart?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * dragend 이벤트 핸들러\n   */\n  onDragEnd?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * Maker 생성 이벤트 핸들러\n   */\n  onCreate?: (maker: kakao.maps.Marker) => void\n\n  /**\n   * 마커 엘리먼트의 타이틀 속성 값 (툴팁)\n   */\n  title?: string\n\n  /**\n   * 클릭 가능한 마커\n   */\n  clickable?: boolean\n\n  /**\n   * 마커 엘리먼트의 z-index 속성 값\n   */\n  zIndex?: number\n\n  /**\n   * 마커 투명도 (0-1)\n   */\n  opacity?: number\n\n  /**\n   * 로드뷰에 올라있는 마커의 높이 값(m 단위)\n   */\n  altitude?: number\n\n  /**\n   * 로드뷰 상에서 마커의 가시반경(m 단위), 두 지점 사이의 거리가 지정한 값보다 멀어지면 마커는 로드뷰에서 보이지 않게 된다.\n   */\n  range?: number\n\n  /**\n   * InfoWindow 옵션\n   */\n  infoWindowOptions?: {\n    /**\n     * 인포윈도우를 열 때 지도가 자동으로 패닝하지 않을지의 여부 (기본값: false)\n     */\n    disableAutoPan?: boolean\n\n    /**\n     * 삭제 가능한 인포윈도우\n     */\n    removable?: boolean\n\n    /**\n     * 인포윈도우 엘리먼트의 z-index 속성 값\n     */\n    zIndex?: number\n  }\n}\n\n/**\n * Map에서 Marker를 생성할 때 사용 합니다.\n * `onCreate` 이벤트를 통해 생성 후 `maker` 객체에 직접 접근하여 초기 설정이 가능합니다.\n */\nconst RoadviewMarker = React.forwardRef<\n  kakao.maps.Marker,\n  React.PropsWithChildren<RoadviewMarkerProps>\n>(\n  (\n    {\n      image,\n      position,\n      children,\n      altitude,\n      clickable,\n      infoWindowOptions,\n      onClick,\n      onDragEnd,\n      onDragStart,\n      onMouseOut,\n      onMouseOver,\n      onCreate,\n      opacity,\n      range,\n      title,\n      zIndex,\n    },\n    ref\n  ) => {\n    const roadview = useRoadview(`RoadviewMarker`)\n\n    const markerImage = useMemo(() => {\n      return (\n        image &&\n        new kakao.maps.MarkerImage(\n          image.src,\n          new kakao.maps.Size(image.size.width, image.size.height),\n          {\n            alt: image.options?.alt,\n            coords: image.options?.coords,\n            offset:\n              image.options?.offset &&\n              new kakao.maps.Point(\n                image.options?.offset.x,\n                image.options?.offset.y\n              ),\n            shape: image.options?.shape,\n            spriteOrigin:\n              image.options?.spriteOrigin &&\n              new kakao.maps.Point(\n                image.options?.spriteOrigin.x,\n                image.options?.spriteOrigin.y\n              ),\n            spriteSize:\n              image.options?.spriteSize &&\n              new kakao.maps.Size(\n                image.options?.spriteSize.width,\n                image.options?.spriteSize.height\n              ),\n          }\n        )\n      )\n    }, [image])\n\n    const markerPosition = useMemo(() => {\n      if (\"lat\" in position) {\n        return new kakao.maps.LatLng(position.lat, position.lng)\n      }\n      if (\"x\" in position) {\n        return new kakao.maps.Coords(position.x, position.y).toLatLng()\n      }\n      return new kakao.maps.Viewpoint(\n        position.pan,\n        position.tilt,\n        position.zoom,\n        position.panoId\n      )\n\n      /* eslint-disable react-hooks/exhaustive-deps */\n    }, [\n      // @ts-ignore\n      position.lat,\n      // @ts-ignore\n      position.lng,\n      // @ts-ignore\n      position.x,\n      // @ts-ignore\n      position.y,\n      // @ts-ignore\n      position.pan,\n      // @ts-ignore\n      position.tilt,\n      // @ts-ignore\n      position.zoom,\n      // @ts-ignore\n      position?.panoId,\n    ])\n    /* eslint-enable react-hooks/exhaustive-deps */\n\n    return (\n      <Marker\n        map={roadview}\n        position={markerPosition}\n        image={markerImage}\n        altitude={altitude}\n        clickable={clickable}\n        infoWindowOptions={infoWindowOptions}\n        onClick={onClick}\n        onDragEnd={onDragEnd}\n        onDragStart={onDragStart}\n        onMouseOut={onMouseOut}\n        onMouseOver={onMouseOver}\n        onCreate={onCreate}\n        opacity={opacity}\n        range={range}\n        title={title}\n        zIndex={zIndex}\n        ref={ref}\n      >\n        {children}\n      </Marker>\n    )\n  }\n)\n\nexport default RoadviewMarker\n","import React, { useMemo } from \"react\"\nimport InfoWindow from \"./InfoWindow\"\nimport useRoadview from \"../hooks/useRoadview\"\n\nexport interface RoadviewInfoWindowProps {\n  /**\n   * 인포윈도가 표시될 위치\n   */\n  position:\n    | {\n        lat: number\n        lng: number\n      }\n    | {\n        /**\n         * 가로 각도, 0부터 360 사이의 값으로 북쪽부터 시계방향으로 대응한다.\n         */\n        pan: number\n        /**\n         * 세로 각도, -90부터 90 사이의 값으로 위쪽부터 아래쪽으로 대응한다.\n         */\n        tilt: number\n        /**\n         * 확대 수준, -3부터 3 사이의 정수이다.\n         */\n        zoom?: number\n        /**\n         * 특정 위치의 로드뷰 고유의 아이디 값\n         */\n        panoId?: number\n      }\n\n  /**\n   * 인포윈도우를 열 때 지도가 자동으로 패닝하지 않을지의 여부 (기본값: false)\n   */\n  disableAutoPan?: boolean\n\n  /**\n   * 삭제 가능한 인포윈도우\n   */\n  removable?: boolean\n\n  /**\n   * 인포윈도우 엘리먼트의 z-index 속성 값\n   */\n  zIndex?: number\n\n  /**\n   * 로드뷰에 올라있는 인포윈도우의 높이 값(m 단위)\n   */\n  altitude?: number\n\n  /**\n   * 로드뷰 상에서 인포윈도우의 가시반경(m 단위), 두 지점 사이의 거리가 지정한 값보다 멀어지면 인포윈도우는 보이지 않게 된다\n   */\n  range?: number\n\n  /**\n   * 인포윈도우 객체 생성후 해당 객체를 반환하는 함수\n   */\n  onCreate?: (infoWindow: kakao.maps.InfoWindow) => void\n}\n\n/**\n * Map 컴포넌트에서 InfoWindow를 그릴 때 사용됩니다.\n * `onCreate` 이벤트를 통해 생성 후 `infoWindow` 객체에 직접 접근하여 초기 설정이 가능합니다.\n */\nconst RoadviewInfoWindow = React.forwardRef<\n  kakao.maps.InfoWindow,\n  React.PropsWithChildren<RoadviewInfoWindowProps>\n>(\n  (\n    {\n      position,\n      children,\n      altitude,\n      disableAutoPan,\n      range,\n      removable,\n      zIndex,\n      onCreate,\n    },\n    ref\n  ) => {\n    const roadview = useRoadview(`RoadviewInfoWindow`)\n    const infoPosition = useMemo(() => {\n      if (\"lat\" in position) {\n        return new kakao.maps.LatLng(position.lat, position.lng)\n      }\n      return new kakao.maps.Viewpoint(\n        position.pan,\n        position.tilt,\n        position.zoom,\n        position.panoId\n      )\n      /* eslint-disable react-hooks/exhaustive-deps */\n    }, [\n      // @ts-ignore\n      position.lat,\n      // @ts-ignore\n      position.lng,\n      // @ts-ignore\n      position.pan,\n      // @ts-ignore\n      position.tilt,\n      // @ts-ignore\n      position.zoom,\n      // @ts-ignore\n      position.panoId,\n    ])\n    /* eslint-enable react-hooks/exhaustive-deps */\n\n    return (\n      <InfoWindow\n        altitude={altitude}\n        disableAutoPan={disableAutoPan}\n        range={range}\n        removable={removable}\n        zIndex={zIndex}\n        map={roadview}\n        position={infoPosition}\n        onCreate={onCreate}\n        ref={ref}\n      >\n        {children}\n      </InfoWindow>\n    )\n  }\n)\n\nexport default RoadviewInfoWindow\n","import React, {\n  Ref,\n  useContext,\n  useImperativeHandle,\n  useLayoutEffect,\n  useMemo,\n} from \"react\"\nimport useMap from \"../hooks/useMap\"\nimport { DrawingManagerContext } from \"./DrawingManager\"\n\nexport type ToolboxProps = {\n  /**\n   * Toolbox의 Position를 정의 한다.\n   */\n  position?: kakao.maps.ControlPosition\n}\n\n/**\n * 그리기 툴박스를 생성합니다.\n *\n * 해당 컴포넌트는 반드시 `DrawingManager` 컴포넌트의 자식으로 존재해야 합니다.\n */\nconst Toolbox = React.forwardRef(function (\n  { position }: ToolboxProps,\n  ref: Ref<kakao.maps.drawing.Toolbox>\n) {\n  position = position || kakao.maps.ControlPosition.TOP\n\n  const map = useMap(\"Toolbox\")\n  const drawingmanager = useContext(DrawingManagerContext)\n\n  if (!drawingmanager) {\n    throw new Error(\"Toolbox must exist inside DrawingManager Component!`\")\n  }\n\n  const toolbox = useMemo(\n    () =>\n      new kakao.maps.drawing.Toolbox({\n        drawingManager: drawingmanager,\n      }),\n    [drawingmanager]\n  )\n  useImperativeHandle(ref, () => toolbox, [toolbox])\n\n  useLayoutEffect(() => {\n    const element = toolbox.getElement()\n    map.addControl(element, position!)\n    return () => {\n      map.removeControl(element)\n    }\n  }, [map, toolbox, position])\n\n  return null\n})\n\nexport default Toolbox\n","import React, { useRef, useState, useImperativeHandle } from \"react\"\nimport useIsomorphicLayoutEffect from \"../hooks/useIsomorphicLayoutEffect\"\n\nexport interface StaticMapProps {\n  /**\n   * MapContinaer의 id에 대해서 지정합니다.\n   */\n  id?: string\n\n  /**\n   * MapContainer의 className에 대해서 지정합니다.\n   */\n  className?: string\n\n  /**\n   * MapContainer의 style에 대해서 지정합니다.\n   */\n  style?: React.CSSProperties\n\n  /**\n   * 중심으로 설정할 위치 입니다.\n   */\n  center: {\n    lat: number\n    lng: number\n  }\n\n  /**\n   * 확대 수준\n   * @default 3\n   */\n  level?: number\n\n  /**\n   * 지도 종류 (기본값: 일반 지도)\n   */\n  mapTypeId?: kakao.maps.MapTypeId\n\n  /**\n   * 이미지 지도에 표시할 마커 또는 마커 배열\n   */\n  marker:\n    | boolean\n    | {\n        /**\n         * 마커 tooltip에 표시될 내용\n         */\n        text?: string\n        /**\n         * 마커 포지션\n         */\n        position?: {\n          lat: number\n          lng: number\n        }\n      }\n    | Array<{\n        /**\n         * 마커 tooltip에 표시될 내용\n         */\n        text?: string\n        /**\n         * 마커 포지션\n         */\n        position: {\n          lat: number\n          lng: number\n        }\n      }>\n  /**\n   * StaticMap 생성 이벤트 핸들러\n   */\n  onCreate?: (maker: kakao.maps.StaticMap) => void\n}\n\nconst StaticMap = React.forwardRef<kakao.maps.StaticMap, StaticMapProps>(\n  (\n    {\n      id = \"react-kakao-maps-sdk-staticmap-container\",\n      style,\n      className,\n      center,\n      marker,\n      level,\n      mapTypeId,\n      onCreate,\n    },\n    ref\n  ) => {\n    const [map, setMap] = useState<kakao.maps.StaticMap>()\n    const container = useRef<HTMLDivElement>(null)\n\n    useIsomorphicLayoutEffect(() => {\n      if (!window.kakao) {\n        console.warn(\n          \"kakao map javascript api를 먼저 불러와야 합니다. `https://apis.map.kakao.com/web/guide`\"\n        )\n        return\n      }\n\n      const mapContainer = container.current\n      if (!mapContainer) return\n\n      kakao.maps.load(() => {\n        const _marker = (() => {\n          if (Array.isArray(marker)) {\n            return marker.map((mk) => {\n              return {\n                ...mk,\n                position: new kakao.maps.LatLng(\n                  mk.position.lat,\n                  mk.position.lng\n                ),\n              }\n            })\n          }\n          if (typeof marker === \"object\") {\n            if (!!marker.position) {\n              return {\n                ...marker,\n                position: new kakao.maps.LatLng(\n                  marker.position.lat,\n                  marker.position.lng\n                ),\n              }\n            }\n            return marker as { text: string }\n          }\n          return marker\n        })()\n        const kakaoStaticMap = new kakao.maps.StaticMap(mapContainer, {\n          center: new kakao.maps.LatLng(center.lat, center.lng),\n          level,\n          mapTypeId,\n          marker: _marker,\n        })\n\n        setMap(kakaoStaticMap)\n      })\n    }, [JSON.stringify(marker)])\n\n    useImperativeHandle(ref, () => map!, [map])\n\n    useIsomorphicLayoutEffect(() => {\n      if (map) map.setCenter(new kakao.maps.LatLng(center.lat, center.lng))\n    }, [map, center.lat, center.lng])\n\n    useIsomorphicLayoutEffect(() => {\n      if (map && level) map.setLevel(level)\n    }, [map, level])\n\n    useIsomorphicLayoutEffect(() => {\n      if (map && mapTypeId) map.setMapTypeId(mapTypeId)\n    }, [map, mapTypeId])\n\n    useIsomorphicLayoutEffect(() => {\n      if (map && onCreate) onCreate(map)\n    }, [map, onCreate])\n\n    return (\n      <div id={id} style={style} className={className} ref={container}></div>\n    )\n  }\n)\n\nexport default StaticMap\n","import { useState, useEffect } from \"react\";\nimport { Map, MapMarker } from \"react-kakao-maps-sdk\";\n\nconst MapContainer = (props) => {\n  const [state, setState] = useState({\n    // 지도의 초기 위치\n    center: { lat: 37.49676871972202, lng: 127.02474726969814 },\n    // 지도 위치 변경시 panto를 이용할지(부드럽게 이동)\n    isPanto: true,\n  });\n  const [searchAddress, SetSearchAddress] = useState();\n\n  // 주소 입력후 검색 클릭 시 원하는 주소로 이동\n  const SearchMap = () => {\n    const ps = new window.kakao.maps.services.Places();\n    const placesSearchCB = function (data, status, pagination) {\n      if (status === window.kakao.maps.services.Status.OK) {\n        const newSearch = data[0];\n        setState({\n          center: { lat: newSearch.y, lng: newSearch.x },\n        });\n      }\n    };\n    ps.keywordSearch(`${searchAddress}`, placesSearchCB);\n  };\n\n  const handleSearchAddress = (e) => {\n    SetSearchAddress(e.target.value);\n  };\n  console.log(props.data.data);\n\n  return (\n    <>\n      {console.log(props.data.data)}\n\n      <Map\n        center={props.data.data.point[0]}\n        isPanto={state.isPanto}\n        style={{\n          width: \"500px\",\n          height: \"500px\",\n          position: \"fixed\",\n          top: \"50%\",\n          left: \"50%\",\n          transform: \"translate(-50%, -50%)\",\n        }}\n        level={7}\n      >\n        {props.data.data.point.map((e, i) => (\n          <MapMarker key={i} position={e}>\n            <div key={i} style={{ color: \"#000\" }}>\n              {props.data.data.location[i]}\n            </div>\n          </MapMarker>\n        ))}\n      </Map>\n      {/* <div>\n        <input onChange={handleSearchAddress}></input>\n        <button onClick={SearchMap}>클릭</button>\n      </div> */}\n    </>\n  );\n};\n\nexport default MapContainer;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport MapContainer from \"./mapContainer\";\n\nconst ModalBackdrop = styled.div`\n  position: fixed;\n  z-index: 999;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  background-color: rgba(0, 0, 0, 0.4);\n  display: grid;\n  place-items: center;\n`;\n\nfunction MapModal(props) {\n  console.log(\"mo\");\n  return (\n    <ModalBackdrop onClick={() => props.setModal(false)}>\n      <MapContainer data={props} />\n    </ModalBackdrop>\n  );\n}\n\nexport default MapModal;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"recommendedBox_container__eHKso\",\"picture\":\"recommendedBox_picture__eQQRk\",\"container_left\":\"recommendedBox_container_left__ixXdi\",\"container_left_title\":\"recommendedBox_container_left_title__imMo6\",\"container_left_location\":\"recommendedBox_container_left_location__7Rkgy\",\"container_left_content\":\"recommendedBox_container_left_content__cESXh\",\"container_right\":\"recommendedBox_container_right__CK7jc\",\"api\":\"recommendedBox_api__+IRpj\",\"api_btn\":\"recommendedBox_api_btn__qh6xb\"};","import React, { useState } from \"react\";\nimport MapModal from \"./mapModal\";\nimport styles from \"./recommendedBox.module.css\";\n\nfunction RecommendedBox(props) {\n  // let [likeBtn, setLikeBtn] = useState(0);\n\n\n  let [modal, setModal] = useState(false);\n\n  // function like() {\n  //   setLikeBtn(likeBtn + 1);\n  // }\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.container_left}>\n        <div className={styles.container_left_title}>{props.data.title}</div>\n        <div className={styles.container_left_location}>\n          {props.data.location}\n        </div>\n\n        <div className={styles.container_left_content}>\n          {props.data.content}\n        </div>\n        {/* <MapContainer data={props}/> */}\n        {/* <div className={styles.like_Btn}>\n          <button className={styles.container_left_like}>\n            <span onClick={like}>좋아요👍🏻</span> {likeBtn}\n          </button>\n        </div> */}\n      </div>\n      <div>\n        <div className={styles.container_right}>\n          <img src={props.data.picture} className={styles.picture}></img>\n        </div>\n        <div className={styles.api}>\n          <button\n            className={styles.api_btn}\n            onClick={() => {\n              setModal(!modal);\n            }}\n          >\n            지도보기\n          </button>\n        </div>\n        {modal === true ? (\n          <MapModal data={props.data} setModal={setModal} />\n        ) : null}\n        {/* {modal === true ? '안녕디지몬' : null} */}\n      </div>\n    </div>\n  );\n}\n\nexport default RecommendedBox;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst MainArea = styled.div`\n@import url('https://fonts.googleapis.com/css?family=Lobster+Two');\n\nh1 {\n\tfont-family: 'Lobster Two', cursive;\n\tfont-size: 5rem;\n\ttext-shadow: 0px 1px 0px rgba(255, 255, 255, 1);\n\tcolor: #343434;\n}\n\n.container {\n\tposition: relative;\n\tz-index: 1011;\n\tbackground-color: #f4f5f7;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tmin-height: 30vh;\n\toverflow: hidden;\n}\n\n.pulse {\n\tz-index: -1;\n\tposition: absolute;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%, -50%);\n\tmax-width: 30rem;\n\t\n\tcircle {\n\t\tfill: #1ccf00;\n\t\ttransform: scale(0);\n\t\topacity: 0;\n\t\ttransform-origin: 50% 50%;\n\t\tanimation: pulse 2s cubic-bezier(.5,.5,0,1);\n\t\t\n\t\t&:nth-child(2) {\n\t\t\tfill: #efb700;\n\t\t\tanimation: pulse 2s 0.75s cubic-bezier(.5,.5,0,1);\n\t\t}\n\t\t\n\t\t&:nth-child(3) {\n\t\t\tfill: #2b81f1;\n\t\t\tanimation: pulse 2s 1.5s cubic-bezier(.5,.5,0,1);\n\t\t}\n\t\t\n\t}\n\t\n}\n@keyframes pulse {\n\t\n\t25% {\n\t\topacity: 0.4;\n\t}\n\t\n\t100% {\n\t\ttransform: scale(1);\n\t}\n\t\n}\n`;\n\nconst EventModal = () => {\n\n    return (\n        <>\n        <MainArea>\n        <div className=\"container\">\n\t\n        <h1>새싹2팀🧡<p/>수고하셨습니다</h1>\n\n        <svg className=\"pulse\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n      <circle id=\"Oval\" cx=\"512\" cy=\"512\" r=\"512\"></circle>\n      <circle id=\"Oval\" cx=\"512\" cy=\"512\" r=\"512\"></circle>\n          <circle id=\"Oval\" cx=\"512\" cy=\"512\" r=\"512\"></circle>\n      </svg>\n\n    </div>\n    </MainArea>\n    </>\n    )\n}\n\nexport default EventModal;","// extracted by mini-css-extract-plugin\nexport default {\"all\":\"recommended_all__yklfp\",\"black_nav\":\"recommended_black_nav__zXLbT\",\"hotplace\":\"recommended_hotplace__UpSdL\"};","import React, {useState} from \"react\";\nimport data from \"../../static/resource/dummyData\";\nimport Header from \"../../components/header/header\";\nimport Footer from \"../../components/footer/footer\";\nimport RecommendedBox from \"./recommendedBox\";\nimport EventModal from \"./eventModal\"\n\n// import Map from '../recommended/map';\nimport styles from \"./recommended.module.css\";\n\nconst Recommended = ({ isUser, setIsUser }) => {\n  let [modals, setModals] = useState(false);\n  return (\n    <div className={styles.all}>\n      <Header isUser={isUser} setIsUser={setIsUser} />\n\n      <section className={styles.recommended}>\n        <div className={styles.black_nav}>\n          {/* <button onClick={() => \n            {data.map((el, idx) => {\n              return <RecommendedBox data={el} key={idx} />;\n            })}\n          \n          } style={{ color: 'grey', fontSize: '16px' }}>hotPlace</button> */}\n          <button className={styles.hotplace}\n          onClick={() => {\n            setModals(!modals);\n          }} >Click</button>\n        {modals === true ? (\n          <EventModal setModals={setModals} />\n        ) : null}\n        </div>\n        {data.map((el, idx) => {\n          return <RecommendedBox data={el} key={idx} />;\n        })}\n      </section>\n\n      {/* <Footer /> */}\n    </div>\n  );\n};\n\nexport default Recommended;\n"],"names":["Container","styled","Wraper","message","onComfirm","target","onClick","e","stopPropagation","className","src","process","alt","styles","window","open","useRecoilState","isUserState","isLogin","to","navigate","useNavigate","setIsLogin","UserAvataState","avata","nicknameState","nickname","useState","confirmModal","setConfirmModal","onLogout","logOut","deleteCookie","res","LoaderStatus","id","title","location","content","picture","point","lat","lng","useIsomorphicLayoutEffect","document","useLayoutEffect","useEffect","useKakaoEvent","type","callback","wrapCallback","arg","kakao","maps","event","addListener","removeListener","Loader","constructor","appkey","libraries","nonce","retries","url","callbacks","done","loading","errors","onerrorEvent","this","instance","equalOptions","options","Error","JSON","stringify","load","Promise","resolve","reject","loadCallback","err","error","status","FAILURE","SUCCESS","LOADING","INITIALIZED","failed","length","fn","push","execute","resetIfRetryingFailed","reset","deleteScript","console","warn","setScript","getElementById","createUrl","script","createElement","onerror","loadErrorCallback","bind","onload","defer","async","head","appendChild","source","lineno","colno","delay","log","setTimeout","join","remove","forEach","cb","loadcheckcallbacks","isLoaded","a","b","i","KakaoMapContext","React","createContext","Map","ref","style","children","center","isPanto","padding","disableDoubleClick","disableDoubleClickZoom","draggable","zoomable","keyboardShortcuts","level","maxLevel","minLevel","mapTypeId","projectionId","scrollwheel","tileAnimation","onBoundsChanged","onCenterChanged","onDoubleClick","onDrag","onDragEnd","onDragStart","onIdle","onMaptypeidChanged","onMouseMove","onRightClick","onTileLoaded","onZoomChanged","onZoomStart","onCreate","setIsLoaded","map","setMap","container","useRef","then","MapContainer","current","initalMapCenter","LatLng","Coords","x","y","kakaoMap","useImperativeHandle","prevCenter","getCenter","toLatLng","centerPosition","equals","panTo","setCenter","setDraggable","setZoomable","setKeyboardShortcuts","setLevel","setMapTypeId","setProjectionId","setMaxLevel","setMinLevel","Provider","value","useMap","componentName","useContext","InfoWindow","position","marker","altitude","disableAutoPan","range","removable","zIndex","infoWindow","useMemo","kakaoInfoWindow","display","close","setPosition","setAltitude","setRange","setZIndex","parentElement","ReactDom","KakaoMapMarkerClustererContext","Marker","averageCenter","calculator","clickable","disableClickZoom","gridSize","hoverable","minClusterSize","texts","onClusterclick","onClusterdblclick","onClustered","onClusterout","onClusterover","onClusterrightclick","markerCluster","MarkerClusterer","setGridSize","redraw","setMinClusterSize","setAverageCenter","setTexts","setCalculator","setStyles","image","infoWindowOptions","onMouseOut","onMouseOver","opacity","addMarker","removeMarker","setImage","setClickable","setOpacity","setTitle","MapMarker","markerImage","MarkerImage","Size","size","width","height","_image$options","coords","_image$options2","offset","Point","_image$options4","_image$options5","shape","_image$options6","spriteOrigin","_image$options8","_image$options9","spriteSize","_image$options11","_image$options12","markerPosition","KakaoRoadviewContext","infoPosition","xAnchor","yAnchor","overlayPosition","overlay","KakaoCustomOverlay","CustomOverlay","ReactDOM","ControlPosition","TOPRIGHT","mapTypeControl","MapTypeControl","addControl","removeControl","RIGHT","ZoomControl","radius","fillColor","fillOpacity","strokeColor","strokeOpacity","strokeStyle","strokeWeight","onMouseover","onMouseout","onMousemove","onMousedown","circleCenter","circle","Circle","setRadius","setOptions","path","endArrow","polyLinePath","every","v","Array","p","polyline","Polyline","setPath","polygonPath","polygon","Polygon","bounds","rectangleBounds","LatLngBounds","sw","ne","rectangle","Rectangle","setBounds","rx","ry","ellipseCenter","ellipse","Ellipse","draw","onAdd","onRemove","reactAbstractOverlay","ReactAbstractOveraly","super","AbstractOverlay","useRoadview","pan","panoId","panoX","panoY","tilt","zoom","onInit","onPanoidChange","onPositionChanged","onViewpointChange","onErrorGetNearestPanoId","isLoading","setIsLoading","roadview","setRoadview","kakaoRoadview","Roadview","getPosition","getLat","getLng","newPostion","RoadviewClient","getNearestPanoId","setPanoId","getPanoId","prevViewpoint","getViewpoint","setViewpoint","DrawingManagerContext","Viewpoint","useDrawingManagerEvent","arrowOptions","circleOptions","ellipseOptions","markerOptions","polygonOptions","polylineOptions","rectangleOptions","drawingMode","guideTooltip","onSelect","onDrawstart","onDraw","onDrawend","onDrawnext","onCancle","onStateChanged","drawingManager","drawing","DrawingManager","TOP","drawingmanager","toolbox","Toolbox","element","getElement","mapContainer","_marker","isArray","mk","kakaoStaticMap","StaticMap","props","state","data","top","left","transform","color","ModalBackdrop","setModal","modal","MainArea","viewBox","version","xmlns","cx","cy","r","isUser","setIsUser","modals","setModals","el","idx"],"sourceRoot":""}